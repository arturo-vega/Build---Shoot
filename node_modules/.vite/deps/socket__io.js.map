{
  "version": 3,
  "sources": ["../../base64id/lib/base64id.js", "../../engine.io-parser/build/cjs/commons.js", "../../engine.io-parser/build/cjs/encodePacket.browser.js", "../../engine.io-parser/build/cjs/contrib/base64-arraybuffer.js", "../../engine.io-parser/build/cjs/decodePacket.browser.js", "../../engine.io-parser/build/cjs/index.js", "../../engine.io/build/parser-v3/utf8.js", "../../engine.io/build/parser-v3/index.js", "../../engine.io/node_modules/debug/src/common.js", "../../engine.io/node_modules/debug/src/browser.js", "../../engine.io/build/transport.js", "../../engine.io/build/transports/polling.js", "../../engine.io/build/transports/polling-jsonp.js", "../../engine.io/build/transports/websocket.js", "../../engine.io/build/transports/webtransport.js", "../../engine.io/build/transports/index.js", "browser-external:timers", "../../engine.io/build/socket.js", "../../engine.io/node_modules/cookie/index.js", "../../ws/browser.js", "../../object-assign/index.js", "../../cors/lib/index.js", "../../engine.io/build/server.js", "../../engine.io/build/transports-uws/polling.js", "../../engine.io/build/transports-uws/websocket.js", "../../engine.io/build/transports-uws/index.js", "../../engine.io/build/userver.js", "../../engine.io/build/engine.io.js", "../../socket.io-parser/build/cjs/is-binary.js", "../../socket.io-parser/build/cjs/binary.js", "../../socket.io-parser/node_modules/debug/src/common.js", "../../socket.io-parser/node_modules/debug/src/browser.js", "../../socket.io-parser/build/cjs/index.js", "../../socket.io/node_modules/debug/src/common.js", "../../socket.io/node_modules/debug/src/browser.js", "../../socket.io/dist/client.js", "../../socket.io/dist/typed-events.js", "../../socket.io/dist/socket-types.js", "../../socket.io/dist/broadcast-operator.js", "../../socket.io/dist/socket.js", "../../socket.io/dist/namespace.js", "../../socket.io-adapter/dist/contrib/yeast.js", "../../socket.io-adapter/dist/in-memory-adapter.js", "../../socket.io-adapter/node_modules/debug/src/common.js", "../../socket.io-adapter/node_modules/debug/src/browser.js", "../../socket.io-adapter/dist/cluster-adapter.js", "../../socket.io-adapter/dist/index.js", "../../socket.io/dist/parent-namespace.js", "../../socket.io/dist/uws.js", "../../socket.io/package.json", "../../socket.io/dist/index.js", "../../socket.io/wrapper.mjs"],
  "sourcesContent": ["/*!\n * base64id v0.1.0\n */\n\n/**\n * Module dependencies\n */\n\nvar crypto = require('crypto');\n\n/**\n * Constructor\n */\n\nvar Base64Id = function() { };\n\n/**\n * Get random bytes\n *\n * Uses a buffer if available, falls back to crypto.randomBytes\n */\n\nBase64Id.prototype.getRandomBytes = function(bytes) {\n\n  var BUFFER_SIZE = 4096\n  var self = this;  \n  \n  bytes = bytes || 12;\n\n  if (bytes > BUFFER_SIZE) {\n    return crypto.randomBytes(bytes);\n  }\n  \n  var bytesInBuffer = parseInt(BUFFER_SIZE/bytes);\n  var threshold = parseInt(bytesInBuffer*0.85);\n\n  if (!threshold) {\n    return crypto.randomBytes(bytes);\n  }\n\n  if (this.bytesBufferIndex == null) {\n     this.bytesBufferIndex = -1;\n  }\n\n  if (this.bytesBufferIndex == bytesInBuffer) {\n    this.bytesBuffer = null;\n    this.bytesBufferIndex = -1;\n  }\n\n  // No buffered bytes available or index above threshold\n  if (this.bytesBufferIndex == -1 || this.bytesBufferIndex > threshold) {\n     \n    if (!this.isGeneratingBytes) {\n      this.isGeneratingBytes = true;\n      crypto.randomBytes(BUFFER_SIZE, function(err, bytes) {\n        self.bytesBuffer = bytes;\n        self.bytesBufferIndex = 0;\n        self.isGeneratingBytes = false;\n      }); \n    }\n    \n    // Fall back to sync call when no buffered bytes are available\n    if (this.bytesBufferIndex == -1) {\n      return crypto.randomBytes(bytes);\n    }\n  }\n  \n  var result = this.bytesBuffer.slice(bytes*this.bytesBufferIndex, bytes*(this.bytesBufferIndex+1)); \n  this.bytesBufferIndex++; \n  \n  return result;\n}\n\n/**\n * Generates a base64 id\n *\n * (Original version from socket.io <http://socket.io>)\n */\n\nBase64Id.prototype.generateId = function () {\n  var rand = Buffer.alloc(15); // multiple of 3 for base64\n  if (!rand.writeInt32BE) {\n    return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()\n      + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();\n  }\n  this.sequenceNumber = (this.sequenceNumber + 1) | 0;\n  rand.writeInt32BE(this.sequenceNumber, 11);\n  if (crypto.randomBytes) {\n    this.getRandomBytes(12).copy(rand);\n  } else {\n    // not secure for node 0.4\n    [0, 4, 8].forEach(function(i) {\n      rand.writeInt32BE(Math.random() * Math.pow(2, 32) | 0, i);\n    });\n  }\n  return rand.toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\n};\n\n/**\n * Export\n */\n\nexports = module.exports = new Base64Id();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERROR_PACKET = exports.PACKET_TYPES_REVERSE = exports.PACKET_TYPES = void 0;\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nexports.PACKET_TYPES = PACKET_TYPES;\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nexports.PACKET_TYPES_REVERSE = PACKET_TYPES_REVERSE;\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexports.ERROR_PACKET = ERROR_PACKET;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodePacket = void 0;\nexports.encodePacketToBinary = encodePacketToBinary;\nconst commons_js_1 = require(\"./commons.js\");\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(commons_js_1.PACKET_TYPES[type] + (data || \"\"));\n};\nexports.encodePacket = encodePacket;\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nfunction encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\n// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexports.encode = encode;\nconst decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\nexports.decode = decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePacket = void 0;\nconst commons_js_1 = require(\"./commons.js\");\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return commons_js_1.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\n        };\n};\nexports.decodePacket = decodePacket;\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePayload = exports.decodePacket = exports.encodePayload = exports.encodePacket = exports.protocol = void 0;\nexports.createPacketEncoderStream = createPacketEncoderStream;\nexports.createPacketDecoderStream = createPacketDecoderStream;\nconst encodePacket_js_1 = require(\"./encodePacket.js\");\nObject.defineProperty(exports, \"encodePacket\", { enumerable: true, get: function () { return encodePacket_js_1.encodePacket; } });\nconst decodePacket_js_1 = require(\"./decodePacket.js\");\nObject.defineProperty(exports, \"decodePacket\", { enumerable: true, get: function () { return decodePacket_js_1.decodePacket; } });\nconst commons_js_1 = require(\"./commons.js\");\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        (0, encodePacket_js_1.encodePacket)(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nexports.encodePayload = encodePayload;\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = (0, decodePacket_js_1.decodePacket)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexports.decodePayload = decodePayload;\nfunction createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            (0, encodePacket_js_1.encodePacketToBinary)(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nfunction createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(commons_js_1.ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue((0, decodePacket_js_1.decodePacket)(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(commons_js_1.ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexports.protocol = 4;\n", "/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode;\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n    var output = [];\n    var counter = 0;\n    var length = string.length;\n    var value;\n    var extra;\n    while (counter < length) {\n        value = string.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            // high surrogate, and there is a next character\n            extra = string.charCodeAt(counter++);\n            if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n            }\n            else {\n                // unmatched surrogate; only append this code unit, in case the next\n                // code unit is the high surrogate of a surrogate pair\n                output.push(value);\n                counter--;\n            }\n        }\n        else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n    var length = array.length;\n    var index = -1;\n    var value;\n    var output = '';\n    while (++index < length) {\n        value = array[index];\n        if (value > 0xFFFF) {\n            value -= 0x10000;\n            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n            value = 0xDC00 | value & 0x3FF;\n        }\n        output += stringFromCharCode(value);\n    }\n    return output;\n}\nfunction checkScalarValue(codePoint, strict) {\n    if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n        if (strict) {\n            throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n                ' is not a scalar value');\n        }\n        return false;\n    }\n    return true;\n}\n/*--------------------------------------------------------------------------*/\nfunction createByte(codePoint, shift) {\n    return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\nfunction encodeCodePoint(codePoint, strict) {\n    if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n        return stringFromCharCode(codePoint);\n    }\n    var symbol = '';\n    if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n    }\n    else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n        if (!checkScalarValue(codePoint, strict)) {\n            codePoint = 0xFFFD;\n        }\n        symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n        symbol += createByte(codePoint, 6);\n    }\n    else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n        symbol += createByte(codePoint, 12);\n        symbol += createByte(codePoint, 6);\n    }\n    symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n    return symbol;\n}\nfunction utf8encode(string, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    var codePoints = ucs2decode(string);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n    while (++index < length) {\n        codePoint = codePoints[index];\n        byteString += encodeCodePoint(codePoint, strict);\n    }\n    return byteString;\n}\n/*--------------------------------------------------------------------------*/\nfunction readContinuationByte() {\n    if (byteIndex >= byteCount) {\n        throw Error('Invalid byte index');\n    }\n    var continuationByte = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    if ((continuationByte & 0xC0) == 0x80) {\n        return continuationByte & 0x3F;\n    }\n    // If we end up here, it’s not a continuation byte\n    throw Error('Invalid continuation byte');\n}\nfunction decodeSymbol(strict) {\n    var byte1;\n    var byte2;\n    var byte3;\n    var byte4;\n    var codePoint;\n    if (byteIndex > byteCount) {\n        throw Error('Invalid byte index');\n    }\n    if (byteIndex == byteCount) {\n        return false;\n    }\n    // Read first byte\n    byte1 = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    // 1-byte sequence (no continuation bytes)\n    if ((byte1 & 0x80) == 0) {\n        return byte1;\n    }\n    // 2-byte sequence\n    if ((byte1 & 0xE0) == 0xC0) {\n        byte2 = readContinuationByte();\n        codePoint = ((byte1 & 0x1F) << 6) | byte2;\n        if (codePoint >= 0x80) {\n            return codePoint;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 3-byte sequence (may include unpaired surrogates)\n    if ((byte1 & 0xF0) == 0xE0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n        if (codePoint >= 0x0800) {\n            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 4-byte sequence\n    if ((byte1 & 0xF8) == 0xF0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        byte4 = readContinuationByte();\n        codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n            (byte3 << 0x06) | byte4;\n        if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n            return codePoint;\n        }\n    }\n    throw Error('Invalid UTF-8 detected');\n}\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    byteArray = ucs2decode(byteString);\n    byteCount = byteArray.length;\n    byteIndex = 0;\n    var codePoints = [];\n    var tmp;\n    while ((tmp = decodeSymbol(strict)) !== false) {\n        codePoints.push(tmp);\n    }\n    return ucs2encode(codePoints);\n}\nmodule.exports = {\n    version: '2.1.2',\n    encode: utf8encode,\n    decode: utf8decode\n};\n", "\"use strict\";\n// imported from https://github.com/socketio/engine.io-parser/tree/2.2.x\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packets = exports.protocol = void 0;\nexports.encodePacket = encodePacket;\nexports.encodeBase64Packet = encodeBase64Packet;\nexports.decodePacket = decodePacket;\nexports.decodeBase64Packet = decodeBase64Packet;\nexports.encodePayload = encodePayload;\nexports.decodePayload = decodePayload;\nexports.encodePayloadAsBinary = encodePayloadAsBinary;\nexports.decodePayloadAsBinary = decodePayloadAsBinary;\n/**\n * Module dependencies.\n */\nvar utf8 = require('./utf8');\n/**\n * Current protocol version.\n */\nexports.protocol = 3;\nconst hasBinary = (packets) => {\n    for (const packet of packets) {\n        if (packet.data instanceof ArrayBuffer || ArrayBuffer.isView(packet.data)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Packet types.\n */\nexports.packets = {\n    open: 0 // non-ws\n    ,\n    close: 1 // non-ws\n    ,\n    ping: 2,\n    pong: 3,\n    message: 4,\n    upgrade: 5,\n    noop: 6\n};\nvar packetslist = Object.keys(exports.packets);\n/**\n * Premade error packet.\n */\nvar err = { type: 'error', data: 'parser error' };\nconst EMPTY_BUFFER = Buffer.concat([]);\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\nfunction encodePacket(packet, supportsBinary, utf8encode, callback) {\n    if (typeof supportsBinary === 'function') {\n        callback = supportsBinary;\n        supportsBinary = null;\n    }\n    if (typeof utf8encode === 'function') {\n        callback = utf8encode;\n        utf8encode = null;\n    }\n    if (Buffer.isBuffer(packet.data)) {\n        return encodeBuffer(packet, supportsBinary, callback);\n    }\n    else if (packet.data && (packet.data.buffer || packet.data) instanceof ArrayBuffer) {\n        return encodeBuffer({ type: packet.type, data: arrayBufferToBuffer(packet.data) }, supportsBinary, callback);\n    }\n    // Sending data as a utf-8 string\n    var encoded = exports.packets[packet.type];\n    // data fragment is optional\n    if (undefined !== packet.data) {\n        encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n    }\n    return callback('' + encoded);\n}\n;\n/**\n * Encode Buffer data\n */\nfunction encodeBuffer(packet, supportsBinary, callback) {\n    if (!supportsBinary) {\n        return encodeBase64Packet(packet, callback);\n    }\n    var data = packet.data;\n    var typeBuffer = Buffer.allocUnsafe(1);\n    typeBuffer[0] = exports.packets[packet.type];\n    return callback(Buffer.concat([typeBuffer, data]));\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\nfunction encodeBase64Packet(packet, callback) {\n    var data = Buffer.isBuffer(packet.data) ? packet.data : arrayBufferToBuffer(packet.data);\n    var message = 'b' + exports.packets[packet.type];\n    message += data.toString('base64');\n    return callback(message);\n}\n;\n/**\n * Decodes a packet. Data also available as an ArrayBuffer if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\nfunction decodePacket(data, binaryType, utf8decode) {\n    if (data === undefined) {\n        return err;\n    }\n    var type;\n    // String data\n    if (typeof data === 'string') {\n        type = data.charAt(0);\n        if (type === 'b') {\n            return decodeBase64Packet(data.slice(1), binaryType);\n        }\n        if (utf8decode) {\n            data = tryDecode(data);\n            if (data === false) {\n                return err;\n            }\n        }\n        if (Number(type) != type || !packetslist[type]) {\n            return err;\n        }\n        if (data.length > 1) {\n            return { type: packetslist[type], data: data.slice(1) };\n        }\n        else {\n            return { type: packetslist[type] };\n        }\n    }\n    // Binary data\n    if (binaryType === 'arraybuffer') {\n        // wrap Buffer/ArrayBuffer data into an Uint8Array\n        var intArray = new Uint8Array(data);\n        type = intArray[0];\n        return { type: packetslist[type], data: intArray.buffer.slice(1) };\n    }\n    if (data instanceof ArrayBuffer) {\n        data = arrayBufferToBuffer(data);\n    }\n    type = data[0];\n    return { type: packetslist[type], data: data.slice(1) };\n}\n;\nfunction tryDecode(data) {\n    try {\n        data = utf8.decode(data, { strict: false });\n    }\n    catch (e) {\n        return false;\n    }\n    return data;\n}\n/**\n * Decodes a packet encoded in a base64 string.\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\nfunction decodeBase64Packet(msg, binaryType) {\n    var type = packetslist[msg.charAt(0)];\n    var data = Buffer.from(msg.slice(1), 'base64');\n    if (binaryType === 'arraybuffer') {\n        var abv = new Uint8Array(data.length);\n        for (var i = 0; i < abv.length; i++) {\n            abv[i] = data[i];\n        }\n        // @ts-ignore\n        data = abv.buffer;\n    }\n    return { type: type, data: data };\n}\n;\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\nfunction encodePayload(packets, supportsBinary, callback) {\n    if (typeof supportsBinary === 'function') {\n        callback = supportsBinary;\n        supportsBinary = null;\n    }\n    if (supportsBinary && hasBinary(packets)) {\n        return encodePayloadAsBinary(packets, callback);\n    }\n    if (!packets.length) {\n        return callback('0:');\n    }\n    function encodeOne(packet, doneCallback) {\n        encodePacket(packet, supportsBinary, false, function (message) {\n            doneCallback(null, setLengthHeader(message));\n        });\n    }\n    map(packets, encodeOne, function (err, results) {\n        return callback(results.join(''));\n    });\n}\n;\nfunction setLengthHeader(message) {\n    return message.length + ':' + message;\n}\n/**\n * Async array map using after\n */\nfunction map(ary, each, done) {\n    const results = new Array(ary.length);\n    let count = 0;\n    for (let i = 0; i < ary.length; i++) {\n        each(ary[i], (error, msg) => {\n            results[i] = msg;\n            if (++count === ary.length) {\n                done(null, results);\n            }\n        });\n    }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\nfunction decodePayload(data, binaryType, callback) {\n    if (typeof data !== 'string') {\n        return decodePayloadAsBinary(data, binaryType, callback);\n    }\n    if (typeof binaryType === 'function') {\n        callback = binaryType;\n        binaryType = null;\n    }\n    if (data === '') {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n    }\n    var length = '', n, msg, packet;\n    for (var i = 0, l = data.length; i < l; i++) {\n        var chr = data.charAt(i);\n        if (chr !== ':') {\n            length += chr;\n            continue;\n        }\n        // @ts-ignore\n        if (length === '' || (length != (n = Number(length)))) {\n            // parser error - ignoring payload\n            return callback(err, 0, 1);\n        }\n        msg = data.slice(i + 1, i + 1 + n);\n        if (length != msg.length) {\n            // parser error - ignoring payload\n            return callback(err, 0, 1);\n        }\n        if (msg.length) {\n            packet = decodePacket(msg, binaryType, false);\n            if (err.type === packet.type && err.data === packet.data) {\n                // parser error in individual packet - ignoring payload\n                return callback(err, 0, 1);\n            }\n            var more = callback(packet, i + n, l);\n            if (false === more)\n                return;\n        }\n        // advance cursor\n        i += n;\n        length = '';\n    }\n    if (length !== '') {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n    }\n}\n;\n/**\n *\n * Converts a buffer to a utf8.js encoded string\n *\n * @api private\n */\nfunction bufferToString(buffer) {\n    var str = '';\n    for (var i = 0, l = buffer.length; i < l; i++) {\n        str += String.fromCharCode(buffer[i]);\n    }\n    return str;\n}\n/**\n *\n * Converts a utf8.js encoded string to a buffer\n *\n * @api private\n */\nfunction stringToBuffer(string) {\n    var buf = Buffer.allocUnsafe(string.length);\n    for (var i = 0, l = string.length; i < l; i++) {\n        buf.writeUInt8(string.charCodeAt(i), i);\n    }\n    return buf;\n}\n/**\n *\n * Converts an ArrayBuffer to a Buffer\n *\n * @api private\n */\nfunction arrayBufferToBuffer(data) {\n    // data is either an ArrayBuffer or ArrayBufferView.\n    var length = data.byteLength || data.length;\n    var offset = data.byteOffset || 0;\n    return Buffer.from(data.buffer || data, offset, length);\n}\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {Buffer} encoded payload\n * @api private\n */\nfunction encodePayloadAsBinary(packets, callback) {\n    if (!packets.length) {\n        return callback(EMPTY_BUFFER);\n    }\n    map(packets, encodeOneBinaryPacket, function (err, results) {\n        return callback(Buffer.concat(results));\n    });\n}\n;\nfunction encodeOneBinaryPacket(p, doneCallback) {\n    function onBinaryPacketEncode(packet) {\n        var encodingLength = '' + packet.length;\n        var sizeBuffer;\n        if (typeof packet === 'string') {\n            sizeBuffer = Buffer.allocUnsafe(encodingLength.length + 2);\n            sizeBuffer[0] = 0; // is a string (not true binary = 0)\n            for (var i = 0; i < encodingLength.length; i++) {\n                sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n            }\n            sizeBuffer[sizeBuffer.length - 1] = 255;\n            return doneCallback(null, Buffer.concat([sizeBuffer, stringToBuffer(packet)]));\n        }\n        sizeBuffer = Buffer.allocUnsafe(encodingLength.length + 2);\n        sizeBuffer[0] = 1; // is binary (true binary = 1)\n        for (var i = 0; i < encodingLength.length; i++) {\n            sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n        }\n        sizeBuffer[sizeBuffer.length - 1] = 255;\n        doneCallback(null, Buffer.concat([sizeBuffer, packet]));\n    }\n    encodePacket(p, true, true, onBinaryPacketEncode);\n}\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n\n * @param {Buffer} data, callback method\n * @api public\n */\nfunction decodePayloadAsBinary(data, binaryType, callback) {\n    if (typeof binaryType === 'function') {\n        callback = binaryType;\n        binaryType = null;\n    }\n    var bufferTail = data;\n    var buffers = [];\n    var i;\n    while (bufferTail.length > 0) {\n        var strLen = '';\n        var isString = bufferTail[0] === 0;\n        for (i = 1;; i++) {\n            if (bufferTail[i] === 255)\n                break;\n            // 310 = char length of Number.MAX_VALUE\n            if (strLen.length > 310) {\n                return callback(err, 0, 1);\n            }\n            strLen += '' + bufferTail[i];\n        }\n        bufferTail = bufferTail.slice(strLen.length + 1);\n        var msgLength = parseInt(strLen, 10);\n        var msg = bufferTail.slice(1, msgLength + 1);\n        if (isString)\n            msg = bufferToString(msg);\n        buffers.push(msg);\n        bufferTail = bufferTail.slice(msgLength + 1);\n    }\n    var total = buffers.length;\n    for (i = 0; i < total; i++) {\n        var buffer = buffers[i];\n        callback(decodePacket(buffer, binaryType, true), i, total);\n    }\n}\n;\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst events_1 = require(\"events\");\nconst parser_v4 = require(\"engine.io-parser\");\nconst parser_v3 = require(\"./parser-v3/index\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:transport\");\nfunction noop() { }\nclass Transport extends events_1.EventEmitter {\n    get readyState() {\n        return this._readyState;\n    }\n    set readyState(state) {\n        debug(\"readyState updated from %s to %s (%s)\", this._readyState, state, this.name);\n        this._readyState = state;\n    }\n    /**\n     * Transport constructor.\n     *\n     * @param {EngineRequest} req\n     */\n    constructor(req) {\n        super();\n        /**\n         * Whether the transport is currently ready to send packets.\n         */\n        this.writable = false;\n        /**\n         * The current state of the transport.\n         * @protected\n         */\n        this._readyState = \"open\";\n        /**\n         * Whether the transport is discarded and can be safely closed (used during upgrade).\n         * @protected\n         */\n        this.discarded = false;\n        this.protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n        this.parser = this.protocol === 4 ? parser_v4 : parser_v3;\n        this.supportsBinary = !(req._query && req._query.b64);\n    }\n    /**\n     * Flags the transport as discarded.\n     *\n     * @package\n     */\n    discard() {\n        this.discarded = true;\n    }\n    /**\n     * Called with an incoming HTTP request.\n     *\n     * @param req\n     * @package\n     */\n    onRequest(req) { }\n    /**\n     * Closes the transport.\n     *\n     * @package\n     */\n    close(fn) {\n        if (\"closed\" === this.readyState || \"closing\" === this.readyState)\n            return;\n        this.readyState = \"closing\";\n        this.doClose(fn || noop);\n    }\n    /**\n     * Called with a transport error.\n     *\n     * @param {String} msg - message error\n     * @param {Object} desc - error description\n     * @protected\n     */\n    onError(msg, desc) {\n        if (this.listeners(\"error\").length) {\n            const err = new Error(msg);\n            // @ts-ignore\n            err.type = \"TransportError\";\n            // @ts-ignore\n            err.description = desc;\n            this.emit(\"error\", err);\n        }\n        else {\n            debug(\"ignored transport error %s (%s)\", msg, desc);\n        }\n    }\n    /**\n     * Called with parsed out a packets from the data stream.\n     *\n     * @param {Object} packet\n     * @protected\n     */\n    onPacket(packet) {\n        this.emit(\"packet\", packet);\n    }\n    /**\n     * Called with the encoded packet data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        this.onPacket(this.parser.decodePacket(data));\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        this.emit(\"close\");\n    }\n}\nexports.Transport = Transport;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Polling = void 0;\nconst transport_1 = require(\"../transport\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:polling\");\nconst compressionMethods = {\n    gzip: zlib_1.createGzip,\n    deflate: zlib_1.createDeflate,\n};\nclass Polling extends transport_1.Transport {\n    /**\n     * HTTP polling constructor.\n     */\n    constructor(req) {\n        super(req);\n        this.closeTimeout = 30 * 1000;\n    }\n    /**\n     * Transport name\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Overrides onRequest.\n     *\n     * @param {EngineRequest} req\n     * @package\n     */\n    onRequest(req) {\n        const res = req.res;\n        // remove the reference to the ServerResponse object (as the first request of the session is kept in memory by default)\n        req.res = null;\n        if (\"GET\" === req.method) {\n            this.onPollRequest(req, res);\n        }\n        else if (\"POST\" === req.method) {\n            this.onDataRequest(req, res);\n        }\n        else {\n            res.writeHead(500);\n            res.end();\n        }\n    }\n    /**\n     * The client sends a request awaiting for us to send data.\n     *\n     * @private\n     */\n    onPollRequest(req, res) {\n        if (this.req) {\n            debug(\"request overlap\");\n            // assert: this.res, '.req and .res should be (un)set together'\n            this.onError(\"overlap from client\");\n            res.writeHead(400);\n            res.end();\n            return;\n        }\n        debug(\"setting request\");\n        this.req = req;\n        this.res = res;\n        const onClose = () => {\n            this.onError(\"poll connection closed prematurely\");\n        };\n        const cleanup = () => {\n            req.removeListener(\"close\", onClose);\n            this.req = this.res = null;\n        };\n        req.cleanup = cleanup;\n        req.on(\"close\", onClose);\n        this.writable = true;\n        this.emit(\"ready\");\n        // if we're still writable but had a pending close, trigger an empty send\n        if (this.writable && this.shouldClose) {\n            debug(\"triggering empty send to append close packet\");\n            this.send([{ type: \"noop\" }]);\n        }\n    }\n    /**\n     * The client sends a request with data.\n     *\n     * @private\n     */\n    onDataRequest(req, res) {\n        if (this.dataReq) {\n            // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n            this.onError(\"data request overlap from client\");\n            res.writeHead(400);\n            res.end();\n            return;\n        }\n        const isBinary = \"application/octet-stream\" === req.headers[\"content-type\"];\n        if (isBinary && this.protocol === 4) {\n            return this.onError(\"invalid content\");\n        }\n        this.dataReq = req;\n        this.dataRes = res;\n        let chunks = isBinary ? Buffer.concat([]) : \"\";\n        const cleanup = () => {\n            req.removeListener(\"data\", onData);\n            req.removeListener(\"end\", onEnd);\n            req.removeListener(\"close\", onClose);\n            this.dataReq = this.dataRes = chunks = null;\n        };\n        const onClose = () => {\n            cleanup();\n            this.onError(\"data request connection closed prematurely\");\n        };\n        const onData = (data) => {\n            let contentLength;\n            if (isBinary) {\n                chunks = Buffer.concat([chunks, data]);\n                contentLength = chunks.length;\n            }\n            else {\n                chunks += data;\n                contentLength = Buffer.byteLength(chunks);\n            }\n            if (contentLength > this.maxHttpBufferSize) {\n                res.writeHead(413).end();\n                cleanup();\n            }\n        };\n        const onEnd = () => {\n            this.onData(chunks);\n            const headers = {\n                // text/html is required instead of text/plain to avoid an\n                // unwanted download dialog on certain user-agents (GH-43)\n                \"Content-Type\": \"text/html\",\n                \"Content-Length\": \"2\",\n            };\n            res.writeHead(200, this.headers(req, headers));\n            res.end(\"ok\");\n            cleanup();\n        };\n        req.on(\"close\", onClose);\n        if (!isBinary)\n            req.setEncoding(\"utf8\");\n        req.on(\"data\", onData);\n        req.on(\"end\", onEnd);\n    }\n    /**\n     * Processes the incoming data payload.\n     *\n     * @param data - encoded payload\n     * @protected\n     */\n    onData(data) {\n        debug('received \"%s\"', data);\n        const callback = (packet) => {\n            if (\"close\" === packet.type) {\n                debug(\"got xhr close packet\");\n                this.onClose();\n                return false;\n            }\n            this.onPacket(packet);\n        };\n        if (this.protocol === 3) {\n            this.parser.decodePayload(data, callback);\n        }\n        else {\n            this.parser.decodePayload(data).forEach(callback);\n        }\n    }\n    /**\n     * Overrides onClose.\n     *\n     * @private\n     */\n    onClose() {\n        if (this.writable) {\n            // close pending poll request\n            this.send([{ type: \"noop\" }]);\n        }\n        super.onClose();\n    }\n    send(packets) {\n        this.writable = false;\n        if (this.shouldClose) {\n            debug(\"appending close packet to payload\");\n            packets.push({ type: \"close\" });\n            this.shouldClose();\n            this.shouldClose = null;\n        }\n        const doWrite = (data) => {\n            const compress = packets.some((packet) => {\n                return packet.options && packet.options.compress;\n            });\n            this.write(data, { compress });\n        };\n        if (this.protocol === 3) {\n            this.parser.encodePayload(packets, this.supportsBinary, doWrite);\n        }\n        else {\n            this.parser.encodePayload(packets, doWrite);\n        }\n    }\n    /**\n     * Writes data as response to poll request.\n     *\n     * @param {String} data\n     * @param {Object} options\n     * @private\n     */\n    write(data, options) {\n        debug('writing \"%s\"', data);\n        this.doWrite(data, options, () => {\n            this.req.cleanup();\n            this.emit(\"drain\");\n        });\n    }\n    /**\n     * Performs the write.\n     *\n     * @protected\n     */\n    doWrite(data, options, callback) {\n        // explicit UTF-8 is required for pages not served under utf\n        const isString = typeof data === \"string\";\n        const contentType = isString\n            ? \"text/plain; charset=UTF-8\"\n            : \"application/octet-stream\";\n        const headers = {\n            \"Content-Type\": contentType,\n        };\n        const respond = (data) => {\n            headers[\"Content-Length\"] =\n                \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            this.res.writeHead(200, this.headers(this.req, headers));\n            this.res.end(data);\n            callback();\n        };\n        if (!this.httpCompression || !options.compress) {\n            respond(data);\n            return;\n        }\n        const len = isString ? Buffer.byteLength(data) : data.length;\n        if (len < this.httpCompression.threshold) {\n            respond(data);\n            return;\n        }\n        const encoding = accepts(this.req).encodings([\"gzip\", \"deflate\"]);\n        if (!encoding) {\n            respond(data);\n            return;\n        }\n        this.compress(data, encoding, (err, data) => {\n            if (err) {\n                this.res.writeHead(500);\n                this.res.end();\n                callback(err);\n                return;\n            }\n            headers[\"Content-Encoding\"] = encoding;\n            respond(data);\n        });\n    }\n    /**\n     * Compresses data.\n     *\n     * @private\n     */\n    compress(data, encoding, callback) {\n        debug(\"compressing\");\n        const buffers = [];\n        let nread = 0;\n        compressionMethods[encoding](this.httpCompression)\n            .on(\"error\", callback)\n            .on(\"data\", function (chunk) {\n            buffers.push(chunk);\n            nread += chunk.length;\n        })\n            .on(\"end\", function () {\n            callback(null, Buffer.concat(buffers, nread));\n        })\n            .end(data);\n    }\n    /**\n     * Closes the transport.\n     *\n     * @private\n     */\n    doClose(fn) {\n        debug(\"closing\");\n        let closeTimeoutTimer;\n        if (this.dataReq) {\n            debug(\"aborting ongoing data request\");\n            this.dataReq.destroy();\n        }\n        const onClose = () => {\n            clearTimeout(closeTimeoutTimer);\n            fn();\n            this.onClose();\n        };\n        if (this.writable) {\n            debug(\"transport writable - closing right away\");\n            this.send([{ type: \"close\" }]);\n            onClose();\n        }\n        else if (this.discarded) {\n            debug(\"transport discarded - closing right away\");\n            onClose();\n        }\n        else {\n            debug(\"transport not writable - buffering orderly close\");\n            this.shouldClose = onClose;\n            closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n        }\n    }\n    /**\n     * Returns headers for a response.\n     *\n     * @param {http.IncomingMessage} req\n     * @param {Object} headers - extra headers\n     * @private\n     */\n    headers(req, headers = {}) {\n        // prevent XSS warnings on IE\n        // https://github.com/LearnBoost/socket.io/pull/1333\n        const ua = req.headers[\"user-agent\"];\n        if (ua && (~ua.indexOf(\";MSIE\") || ~ua.indexOf(\"Trident/\"))) {\n            headers[\"X-XSS-Protection\"] = \"0\";\n        }\n        headers[\"cache-control\"] = \"no-store\";\n        this.emit(\"headers\", headers, req);\n        return headers;\n    }\n}\nexports.Polling = Polling;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONP = void 0;\nconst polling_1 = require(\"./polling\");\nconst qs = require(\"querystring\");\nconst rDoubleSlashes = /\\\\\\\\n/g;\nconst rSlashes = /(\\\\)?\\\\n/g;\nclass JSONP extends polling_1.Polling {\n    /**\n     * JSON-P polling transport.\n     */\n    constructor(req) {\n        super(req);\n        this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n        this.foot = \");\";\n    }\n    onData(data) {\n        // we leverage the qs module so that we get built-in DoS protection\n        // and the fast alternative to decodeURIComponent\n        data = qs.parse(data).d;\n        if (\"string\" === typeof data) {\n            // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n            // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n            data = data.replace(rSlashes, function (match, slashes) {\n                return slashes ? match : \"\\n\";\n            });\n            super.onData(data.replace(rDoubleSlashes, \"\\\\n\"));\n        }\n    }\n    doWrite(data, options, callback) {\n        // we must output valid javascript, not valid json\n        // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n        const js = JSON.stringify(data)\n            .replace(/\\u2028/g, \"\\\\u2028\")\n            .replace(/\\u2029/g, \"\\\\u2029\");\n        // prepare response\n        data = this.head + js + this.foot;\n        super.doWrite(data, options, callback);\n    }\n}\nexports.JSONP = JSONP;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocket = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:ws\");\nclass WebSocket extends transport_1.Transport {\n    /**\n     * WebSocket transport\n     *\n     * @param {EngineRequest} req\n     */\n    constructor(req) {\n        super(req);\n        this._doSend = (data) => {\n            this.socket.send(data, this._onSent);\n        };\n        this._doSendLast = (data) => {\n            this.socket.send(data, this._onSentLast);\n        };\n        this._onSent = (err) => {\n            if (err) {\n                this.onError(\"write error\", err.stack);\n            }\n        };\n        this._onSentLast = (err) => {\n            if (err) {\n                this.onError(\"write error\", err.stack);\n            }\n            else {\n                this.emit(\"drain\");\n                this.writable = true;\n                this.emit(\"ready\");\n            }\n        };\n        this.socket = req.websocket;\n        this.socket.on(\"message\", (data, isBinary) => {\n            const message = isBinary ? data : data.toString();\n            debug('received \"%s\"', message);\n            super.onData(message);\n        });\n        this.socket.once(\"close\", this.onClose.bind(this));\n        this.socket.on(\"error\", this.onError.bind(this));\n        this.writable = true;\n        this.perMessageDeflate = null;\n    }\n    /**\n     * Transport name\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Advertise upgrade support.\n     */\n    get handlesUpgrades() {\n        return true;\n    }\n    send(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const isLast = i + 1 === packets.length;\n            if (this._canSendPreEncodedFrame(packet)) {\n                // the WebSocket frame was computed with WebSocket.Sender.frame()\n                // see https://github.com/websockets/ws/issues/617#issuecomment-283002469\n                this.socket._sender.sendFrame(\n                // @ts-ignore\n                packet.options.wsPreEncodedFrame, isLast ? this._onSentLast : this._onSent);\n            }\n            else {\n                this.parser.encodePacket(packet, this.supportsBinary, isLast ? this._doSendLast : this._doSend);\n            }\n        }\n    }\n    /**\n     * Whether the encoding of the WebSocket frame can be skipped.\n     * @param packet\n     * @private\n     */\n    _canSendPreEncodedFrame(packet) {\n        var _a, _b, _c;\n        return (!this.perMessageDeflate &&\n            typeof ((_b = (_a = this.socket) === null || _a === void 0 ? void 0 : _a._sender) === null || _b === void 0 ? void 0 : _b.sendFrame) === \"function\" &&\n            // @ts-ignore\n            ((_c = packet.options) === null || _c === void 0 ? void 0 : _c.wsPreEncodedFrame) !== undefined);\n    }\n    doClose(fn) {\n        debug(\"closing\");\n        this.socket.close();\n        fn && fn();\n    }\n}\nexports.WebSocket = WebSocket;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebTransport = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine:webtransport\");\n/**\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/WebTransport_API\n */\nclass WebTransport extends transport_1.Transport {\n    constructor(session, stream, reader) {\n        super({ _query: { EIO: \"4\" } });\n        this.session = session;\n        const transformStream = (0, engine_io_parser_1.createPacketEncoderStream)();\n        transformStream.readable.pipeTo(stream.writable).catch(() => {\n            debug(\"the stream was closed\");\n        });\n        this.writer = transformStream.writable.getWriter();\n        (async () => {\n            try {\n                while (true) {\n                    const { value, done } = await reader.read();\n                    if (done) {\n                        debug(\"session is closed\");\n                        break;\n                    }\n                    debug(\"received chunk: %o\", value);\n                    this.onPacket(value);\n                }\n            }\n            catch (e) {\n                debug(\"error while reading: %s\", e.message);\n            }\n        })();\n        session.closed.then(() => this.onClose());\n        this.writable = true;\n    }\n    get name() {\n        return \"webtransport\";\n    }\n    async send(packets) {\n        this.writable = false;\n        try {\n            for (let i = 0; i < packets.length; i++) {\n                const packet = packets[i];\n                await this.writer.write(packet);\n            }\n        }\n        catch (e) {\n            debug(\"error while writing: %s\", e.message);\n        }\n        this.emit(\"drain\");\n        this.writable = true;\n        this.emit(\"ready\");\n    }\n    doClose(fn) {\n        debug(\"closing WebTransport session\");\n        this.session.close();\n        fn && fn();\n    }\n}\nexports.WebTransport = WebTransport;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst polling_1 = require(\"./polling\");\nconst polling_jsonp_1 = require(\"./polling-jsonp\");\nconst websocket_1 = require(\"./websocket\");\nconst webtransport_1 = require(\"./webtransport\");\nexports.default = {\n    polling: polling,\n    websocket: websocket_1.WebSocket,\n    webtransport: webtransport_1.WebTransport,\n};\n/**\n * Polling polymorphic constructor.\n */\nfunction polling(req) {\n    if (\"string\" === typeof req._query.j) {\n        return new polling_jsonp_1.JSONP(req);\n    }\n    else {\n        return new polling_1.Polling(req);\n    }\n}\npolling.upgradesTo = [\"websocket\", \"webtransport\"];\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"timers\" has been externalized for browser compatibility. Cannot access \"timers.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst events_1 = require(\"events\");\nconst debug_1 = require(\"debug\");\nconst timers_1 = require(\"timers\");\nconst debug = (0, debug_1.default)(\"engine:socket\");\nclass Socket extends events_1.EventEmitter {\n    get readyState() {\n        return this._readyState;\n    }\n    set readyState(state) {\n        debug(\"readyState updated from %s to %s\", this._readyState, state);\n        this._readyState = state;\n    }\n    constructor(id, server, transport, req, protocol) {\n        super();\n        /**\n         * The current state of the socket.\n         */\n        this._readyState = \"opening\";\n        /* private */ this.upgrading = false;\n        /* private */ this.upgraded = false;\n        this.writeBuffer = [];\n        this.packetsFn = [];\n        this.sentCallbackFn = [];\n        this.cleanupFn = [];\n        this.id = id;\n        this.server = server;\n        this.request = req;\n        this.protocol = protocol;\n        // Cache IP since it might not be in the req later\n        if (req) {\n            if (req.websocket && req.websocket._socket) {\n                this.remoteAddress = req.websocket._socket.remoteAddress;\n            }\n            else {\n                this.remoteAddress = req.connection.remoteAddress;\n            }\n        }\n        else {\n            // TODO there is currently no way to get the IP address of the client when it connects with WebTransport\n            //  see https://github.com/fails-components/webtransport/issues/114\n        }\n        this.pingTimeoutTimer = null;\n        this.pingIntervalTimer = null;\n        this.setTransport(transport);\n        this.onOpen();\n    }\n    /**\n     * Called upon transport considered open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        // sends an `open` packet\n        this.transport.sid = this.id;\n        this.sendPacket(\"open\", JSON.stringify({\n            sid: this.id,\n            upgrades: this.getAvailableUpgrades(),\n            pingInterval: this.server.opts.pingInterval,\n            pingTimeout: this.server.opts.pingTimeout,\n            maxPayload: this.server.opts.maxHttpBufferSize,\n        }));\n        if (this.server.opts.initialPacket) {\n            this.sendPacket(\"message\", this.server.opts.initialPacket);\n        }\n        this.emit(\"open\");\n        if (this.protocol === 3) {\n            // in protocol v3, the client sends a ping, and the server answers with a pong\n            this.resetPingTimeout();\n        }\n        else {\n            // in protocol v4, the server sends a ping, and the client answers with a pong\n            this.schedulePing();\n        }\n    }\n    /**\n     * Called upon transport packet.\n     *\n     * @param {Object} packet\n     * @private\n     */\n    onPacket(packet) {\n        if (\"open\" !== this.readyState) {\n            return debug(\"packet received with closed socket\");\n        }\n        // export packet event\n        debug(`received packet ${packet.type}`);\n        this.emit(\"packet\", packet);\n        switch (packet.type) {\n            case \"ping\":\n                if (this.transport.protocol !== 3) {\n                    this.onError(new Error(\"invalid heartbeat direction\"));\n                    return;\n                }\n                debug(\"got ping\");\n                this.pingTimeoutTimer.refresh();\n                this.sendPacket(\"pong\");\n                this.emit(\"heartbeat\");\n                break;\n            case \"pong\":\n                if (this.transport.protocol === 3) {\n                    this.onError(new Error(\"invalid heartbeat direction\"));\n                    return;\n                }\n                debug(\"got pong\");\n                (0, timers_1.clearTimeout)(this.pingTimeoutTimer);\n                this.pingIntervalTimer.refresh();\n                this.emit(\"heartbeat\");\n                break;\n            case \"error\":\n                this.onClose(\"parse error\");\n                break;\n            case \"message\":\n                this.emit(\"data\", packet.data);\n                this.emit(\"message\", packet.data);\n                break;\n        }\n    }\n    /**\n     * Called upon transport error.\n     *\n     * @param {Error} err - error object\n     * @private\n     */\n    onError(err) {\n        debug(\"transport error\");\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Pings client every `this.pingInterval` and expects response\n     * within `this.pingTimeout` or closes connection.\n     *\n     * @private\n     */\n    schedulePing() {\n        this.pingIntervalTimer = (0, timers_1.setTimeout)(() => {\n            debug(\"writing ping packet - expecting pong within %sms\", this.server.opts.pingTimeout);\n            this.sendPacket(\"ping\");\n            this.resetPingTimeout();\n        }, this.server.opts.pingInterval);\n    }\n    /**\n     * Resets ping timeout.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        (0, timers_1.clearTimeout)(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = (0, timers_1.setTimeout)(() => {\n            if (this.readyState === \"closed\")\n                return;\n            this.onClose(\"ping timeout\");\n        }, this.protocol === 3\n            ? this.server.opts.pingInterval + this.server.opts.pingTimeout\n            : this.server.opts.pingTimeout);\n    }\n    /**\n     * Attaches handlers for the given transport.\n     *\n     * @param {Transport} transport\n     * @private\n     */\n    setTransport(transport) {\n        const onError = this.onError.bind(this);\n        const onReady = () => this.flush();\n        const onPacket = this.onPacket.bind(this);\n        const onDrain = this.onDrain.bind(this);\n        const onClose = this.onClose.bind(this, \"transport close\");\n        this.transport = transport;\n        this.transport.once(\"error\", onError);\n        this.transport.on(\"ready\", onReady);\n        this.transport.on(\"packet\", onPacket);\n        this.transport.on(\"drain\", onDrain);\n        this.transport.once(\"close\", onClose);\n        this.cleanupFn.push(function () {\n            transport.removeListener(\"error\", onError);\n            transport.removeListener(\"ready\", onReady);\n            transport.removeListener(\"packet\", onPacket);\n            transport.removeListener(\"drain\", onDrain);\n            transport.removeListener(\"close\", onClose);\n        });\n    }\n    /**\n     * Upon transport \"drain\" event\n     *\n     * @private\n     */\n    onDrain() {\n        if (this.sentCallbackFn.length > 0) {\n            debug(\"executing batch send callback\");\n            const seqFn = this.sentCallbackFn.shift();\n            if (seqFn) {\n                for (let i = 0; i < seqFn.length; i++) {\n                    seqFn[i](this.transport);\n                }\n            }\n        }\n    }\n    /**\n     * Upgrades socket to the given transport\n     *\n     * @param {Transport} transport\n     * @private\n     */\n    /* private */ _maybeUpgrade(transport) {\n        debug('might upgrade socket transport from \"%s\" to \"%s\"', this.transport.name, transport.name);\n        this.upgrading = true;\n        // set transport upgrade timer\n        const upgradeTimeoutTimer = (0, timers_1.setTimeout)(() => {\n            debug(\"client did not complete upgrade - closing transport\");\n            cleanup();\n            if (\"open\" === transport.readyState) {\n                transport.close();\n            }\n        }, this.server.opts.upgradeTimeout);\n        let checkIntervalTimer;\n        const onPacket = (packet) => {\n            if (\"ping\" === packet.type && \"probe\" === packet.data) {\n                debug(\"got probe ping packet, sending pong\");\n                transport.send([{ type: \"pong\", data: \"probe\" }]);\n                this.emit(\"upgrading\", transport);\n                clearInterval(checkIntervalTimer);\n                checkIntervalTimer = setInterval(check, 100);\n            }\n            else if (\"upgrade\" === packet.type && this.readyState !== \"closed\") {\n                debug(\"got upgrade packet - upgrading\");\n                cleanup();\n                this.transport.discard();\n                this.upgraded = true;\n                this.clearTransport();\n                this.setTransport(transport);\n                this.emit(\"upgrade\", transport);\n                this.flush();\n                if (this.readyState === \"closing\") {\n                    transport.close(() => {\n                        this.onClose(\"forced close\");\n                    });\n                }\n            }\n            else {\n                cleanup();\n                transport.close();\n            }\n        };\n        // we force a polling cycle to ensure a fast upgrade\n        const check = () => {\n            if (\"polling\" === this.transport.name && this.transport.writable) {\n                debug(\"writing a noop packet to polling for fast upgrade\");\n                this.transport.send([{ type: \"noop\" }]);\n            }\n        };\n        const cleanup = () => {\n            this.upgrading = false;\n            clearInterval(checkIntervalTimer);\n            (0, timers_1.clearTimeout)(upgradeTimeoutTimer);\n            transport.removeListener(\"packet\", onPacket);\n            transport.removeListener(\"close\", onTransportClose);\n            transport.removeListener(\"error\", onError);\n            this.removeListener(\"close\", onClose);\n        };\n        const onError = (err) => {\n            debug(\"client did not complete upgrade - %s\", err);\n            cleanup();\n            transport.close();\n            transport = null;\n        };\n        const onTransportClose = () => {\n            onError(\"transport closed\");\n        };\n        const onClose = () => {\n            onError(\"socket closed\");\n        };\n        transport.on(\"packet\", onPacket);\n        transport.once(\"close\", onTransportClose);\n        transport.once(\"error\", onError);\n        this.once(\"close\", onClose);\n    }\n    /**\n     * Clears listeners and timers associated with current transport.\n     *\n     * @private\n     */\n    clearTransport() {\n        let cleanup;\n        const toCleanUp = this.cleanupFn.length;\n        for (let i = 0; i < toCleanUp; i++) {\n            cleanup = this.cleanupFn.shift();\n            cleanup();\n        }\n        // silence further transport errors and prevent uncaught exceptions\n        this.transport.on(\"error\", function () {\n            debug(\"error triggered by discarded transport\");\n        });\n        // ensure transport won't stay open\n        this.transport.close();\n        (0, timers_1.clearTimeout)(this.pingTimeoutTimer);\n    }\n    /**\n     * Called upon transport considered closed.\n     * Possible reasons: `ping timeout`, `client error`, `parse error`,\n     * `transport error`, `server close`, `transport close`\n     */\n    onClose(reason, description) {\n        if (\"closed\" !== this.readyState) {\n            this.readyState = \"closed\";\n            // clear timers\n            (0, timers_1.clearTimeout)(this.pingIntervalTimer);\n            (0, timers_1.clearTimeout)(this.pingTimeoutTimer);\n            // clean writeBuffer in next tick, so developers can still\n            // grab the writeBuffer on 'close' event\n            process.nextTick(() => {\n                this.writeBuffer = [];\n            });\n            this.packetsFn = [];\n            this.sentCallbackFn = [];\n            this.clearTransport();\n            this.emit(\"close\", reason, description);\n        }\n    }\n    /**\n     * Sends a message packet.\n     *\n     * @param {Object} data\n     * @param {Object} options\n     * @param {Function} callback\n     * @return {Socket} for chaining\n     */\n    send(data, options, callback) {\n        this.sendPacket(\"message\", data, options, callback);\n        return this;\n    }\n    /**\n     * Alias of {@link send}.\n     *\n     * @param data\n     * @param options\n     * @param callback\n     */\n    write(data, options, callback) {\n        this.sendPacket(\"message\", data, options, callback);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type - packet type\n     * @param {String} data\n     * @param {Object} options\n     * @param {Function} callback\n     *\n     * @private\n     */\n    sendPacket(type, data, options = {}, callback) {\n        if (\"function\" === typeof options) {\n            callback = options;\n            options = {};\n        }\n        if (\"closing\" !== this.readyState && \"closed\" !== this.readyState) {\n            debug('sending packet \"%s\" (%s)', type, data);\n            // compression is enabled by default\n            options.compress = options.compress !== false;\n            const packet = {\n                type,\n                options: options,\n            };\n            if (data)\n                packet.data = data;\n            // exports packetCreate event\n            this.emit(\"packetCreate\", packet);\n            this.writeBuffer.push(packet);\n            // add send callback to object, if defined\n            if (\"function\" === typeof callback)\n                this.packetsFn.push(callback);\n            this.flush();\n        }\n    }\n    /**\n     * Attempts to flush the packets buffer.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            this.writeBuffer.length) {\n            debug(\"flushing buffer to transport\");\n            this.emit(\"flush\", this.writeBuffer);\n            this.server.emit(\"flush\", this, this.writeBuffer);\n            const wbuf = this.writeBuffer;\n            this.writeBuffer = [];\n            if (this.packetsFn.length) {\n                this.sentCallbackFn.push(this.packetsFn);\n                this.packetsFn = [];\n            }\n            else {\n                this.sentCallbackFn.push(null);\n            }\n            this.transport.send(wbuf);\n            this.emit(\"drain\");\n            this.server.emit(\"drain\", this);\n        }\n    }\n    /**\n     * Get available upgrades for this socket.\n     *\n     * @private\n     */\n    getAvailableUpgrades() {\n        const availableUpgrades = [];\n        const allUpgrades = this.server.upgrades(this.transport.name);\n        for (let i = 0; i < allUpgrades.length; ++i) {\n            const upg = allUpgrades[i];\n            if (this.server.opts.transports.indexOf(upg) !== -1) {\n                availableUpgrades.push(upg);\n            }\n        }\n        return availableUpgrades;\n    }\n    /**\n     * Closes the socket and underlying transport.\n     *\n     * @param {Boolean} discard - optional, discard the transport\n     * @return {Socket} for chaining\n     */\n    close(discard) {\n        if (discard &&\n            (this.readyState === \"open\" || this.readyState === \"closing\")) {\n            return this.closeTransport(discard);\n        }\n        if (\"open\" !== this.readyState)\n            return;\n        this.readyState = \"closing\";\n        if (this.writeBuffer.length) {\n            debug(\"there are %d remaining packets in the buffer, waiting for the 'drain' event\", this.writeBuffer.length);\n            this.once(\"drain\", () => {\n                debug(\"all packets have been sent, closing the transport\");\n                this.closeTransport(discard);\n            });\n            return;\n        }\n        debug(\"the buffer is empty, closing the transport right away\");\n        this.closeTransport(discard);\n    }\n    /**\n     * Closes the underlying transport.\n     *\n     * @param {Boolean} discard\n     * @private\n     */\n    closeTransport(discard) {\n        debug(\"closing the transport (discard? %s)\", !!discard);\n        if (discard)\n            this.transport.discard();\n        this.transport.close(this.onClose.bind(this, \"forced close\"));\n    }\n}\nexports.Socket = Socket;\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\nvar __hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n */\n\nvar cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n */\n\nvar cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\n\nvar domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\n\nvar pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [opt]\n * @return {object}\n * @public\n */\n\nfunction parse(str, opt) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  var dec = (opt && opt.decode) || decode;\n  var index = 0;\n  var eqIdx = 0;\n  var endIdx = 0;\n\n  do {\n    eqIdx = str.indexOf('=', index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = len;\n    } else if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    var keyStartIdx = startIndex(str, index, eqIdx);\n    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    var key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (!__hasOwnProperty.call(obj, key)) {\n      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      var valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      if (str.charCodeAt(valStartIdx) === 0x22 /* \" */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* \" */) {\n        valStartIdx++;\n        valEndIdx--;\n      }\n\n      var val = str.slice(valStartIdx, valEndIdx);\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str, index, max) {\n  do {\n    var code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str, index, min) {\n  while (index > min) {\n    var code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [opt]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, opt) {\n  var enc = (opt && opt.encode) || encodeURIComponent;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n  if (!opt) return str;\n\n  if (null != opt.maxAge) {\n    var maxAge = Math.floor(opt.maxAge);\n\n    if (!isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + maxAge;\n  }\n\n  if (opt.domain) {\n    if (!domainValueRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!pathValueRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase() : opt.priority;\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]';\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports.BaseServer = void 0;\nconst qs = require(\"querystring\");\nconst url_1 = require(\"url\");\nconst base64id = require(\"base64id\");\nconst transports_1 = require(\"./transports\");\nconst events_1 = require(\"events\");\nconst socket_1 = require(\"./socket\");\nconst debug_1 = require(\"debug\");\nconst cookie_1 = require(\"cookie\");\nconst ws_1 = require(\"ws\");\nconst webtransport_1 = require(\"./transports/webtransport\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine\");\nconst kResponseHeaders = Symbol(\"responseHeaders\");\nfunction parseSessionId(data) {\n    try {\n        const parsed = JSON.parse(data);\n        if (typeof parsed.sid === \"string\") {\n            return parsed.sid;\n        }\n    }\n    catch (e) { }\n}\nclass BaseServer extends events_1.EventEmitter {\n    /**\n     * Server constructor.\n     *\n     * @param {Object} opts - options\n     */\n    constructor(opts = {}) {\n        super();\n        this.middlewares = [];\n        this.clients = {};\n        this.clientsCount = 0;\n        this.opts = Object.assign({\n            wsEngine: ws_1.Server,\n            pingTimeout: 20000,\n            pingInterval: 25000,\n            upgradeTimeout: 10000,\n            maxHttpBufferSize: 1e6,\n            transports: [\"polling\", \"websocket\"], // WebTransport is disabled by default\n            allowUpgrades: true,\n            httpCompression: {\n                threshold: 1024,\n            },\n            cors: false,\n            allowEIO3: false,\n        }, opts);\n        if (opts.cookie) {\n            this.opts.cookie = Object.assign({\n                name: \"io\",\n                path: \"/\",\n                // @ts-ignore\n                httpOnly: opts.cookie.path !== false,\n                sameSite: \"lax\",\n            }, opts.cookie);\n        }\n        if (this.opts.cors) {\n            this.use(require(\"cors\")(this.opts.cors));\n        }\n        if (opts.perMessageDeflate) {\n            this.opts.perMessageDeflate = Object.assign({\n                threshold: 1024,\n            }, opts.perMessageDeflate);\n        }\n        this.init();\n    }\n    /**\n     * Compute the pathname of the requests that are handled by the server\n     * @param options\n     * @protected\n     */\n    _computePath(options) {\n        let path = (options.path || \"/engine.io\").replace(/\\/$/, \"\");\n        if (options.addTrailingSlash !== false) {\n            // normalize path\n            path += \"/\";\n        }\n        return path;\n    }\n    /**\n     * Returns a list of available transports for upgrade given a certain transport.\n     *\n     * @return {Array}\n     */\n    upgrades(transport) {\n        if (!this.opts.allowUpgrades)\n            return [];\n        return transports_1.default[transport].upgradesTo || [];\n    }\n    /**\n     * Verifies a request.\n     *\n     * @param {EngineRequest} req\n     * @param upgrade - whether it's an upgrade request\n     * @param fn\n     * @protected\n     */\n    verify(req, upgrade, fn) {\n        // transport check\n        const transport = req._query.transport;\n        // WebTransport does not go through the verify() method, see the onWebTransportSession() method\n        if (!~this.opts.transports.indexOf(transport) ||\n            transport === \"webtransport\") {\n            debug('unknown transport \"%s\"', transport);\n            return fn(Server.errors.UNKNOWN_TRANSPORT, { transport });\n        }\n        // 'Origin' header check\n        const isOriginInvalid = checkInvalidHeaderChar(req.headers.origin);\n        if (isOriginInvalid) {\n            const origin = req.headers.origin;\n            req.headers.origin = null;\n            debug(\"origin header invalid\");\n            return fn(Server.errors.BAD_REQUEST, {\n                name: \"INVALID_ORIGIN\",\n                origin,\n            });\n        }\n        // sid check\n        const sid = req._query.sid;\n        if (sid) {\n            if (!this.clients.hasOwnProperty(sid)) {\n                debug('unknown sid \"%s\"', sid);\n                return fn(Server.errors.UNKNOWN_SID, {\n                    sid,\n                });\n            }\n            const previousTransport = this.clients[sid].transport.name;\n            if (!upgrade && previousTransport !== transport) {\n                debug(\"bad request: unexpected transport without upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_MISMATCH\",\n                    transport,\n                    previousTransport,\n                });\n            }\n        }\n        else {\n            // handshake is GET only\n            if (\"GET\" !== req.method) {\n                return fn(Server.errors.BAD_HANDSHAKE_METHOD, {\n                    method: req.method,\n                });\n            }\n            if (transport === \"websocket\" && !upgrade) {\n                debug(\"invalid transport upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\",\n                });\n            }\n            if (!this.opts.allowRequest)\n                return fn();\n            return this.opts.allowRequest(req, (message, success) => {\n                if (!success) {\n                    return fn(Server.errors.FORBIDDEN, {\n                        message,\n                    });\n                }\n                fn();\n            });\n        }\n        fn();\n    }\n    /**\n     * Adds a new middleware.\n     *\n     * @example\n     * import helmet from \"helmet\";\n     *\n     * engine.use(helmet());\n     *\n     * @param fn\n     */\n    use(fn) {\n        this.middlewares.push(fn);\n    }\n    /**\n     * Apply the middlewares to the request.\n     *\n     * @param req\n     * @param res\n     * @param callback\n     * @protected\n     */\n    _applyMiddlewares(req, res, callback) {\n        if (this.middlewares.length === 0) {\n            debug(\"no middleware to apply, skipping\");\n            return callback();\n        }\n        const apply = (i) => {\n            debug(\"applying middleware n°%d\", i + 1);\n            this.middlewares[i](req, res, (err) => {\n                if (err) {\n                    return callback(err);\n                }\n                if (i + 1 < this.middlewares.length) {\n                    apply(i + 1);\n                }\n                else {\n                    callback();\n                }\n            });\n        };\n        apply(0);\n    }\n    /**\n     * Closes all clients.\n     */\n    close() {\n        debug(\"closing all open clients\");\n        for (let i in this.clients) {\n            if (this.clients.hasOwnProperty(i)) {\n                this.clients[i].close(true);\n            }\n        }\n        this.cleanup();\n        return this;\n    }\n    /**\n     * generate a socket id.\n     * Overwrite this method to generate your custom socket id\n     *\n     * @param {IncomingMessage} req - the request object\n     */\n    generateId(req) {\n        return base64id.generateId();\n    }\n    /**\n     * Handshakes a new client.\n     *\n     * @param {String} transportName\n     * @param {Object} req - the request object\n     * @param {Function} closeConnection\n     *\n     * @protected\n     */\n    async handshake(transportName, req, closeConnection) {\n        const protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n        if (protocol === 3 && !this.opts.allowEIO3) {\n            debug(\"unsupported protocol version\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.UNSUPPORTED_PROTOCOL_VERSION,\n                message: Server.errorMessages[Server.errors.UNSUPPORTED_PROTOCOL_VERSION],\n                context: {\n                    protocol,\n                },\n            });\n            closeConnection(Server.errors.UNSUPPORTED_PROTOCOL_VERSION);\n            return;\n        }\n        let id;\n        try {\n            id = await this.generateId(req);\n        }\n        catch (e) {\n            debug(\"error while generating an id\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"ID_GENERATION_ERROR\",\n                    error: e,\n                },\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        debug('handshaking client \"%s\"', id);\n        try {\n            var transport = this.createTransport(transportName, req);\n            if (\"polling\" === transportName) {\n                transport.maxHttpBufferSize = this.opts.maxHttpBufferSize;\n                transport.httpCompression = this.opts.httpCompression;\n            }\n            else if (\"websocket\" === transportName) {\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n            }\n        }\n        catch (e) {\n            debug('error handshaking to transport \"%s\"', transportName);\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\",\n                    error: e,\n                },\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        const socket = new socket_1.Socket(id, this, transport, req, protocol);\n        transport.on(\"headers\", (headers, req) => {\n            const isInitialRequest = !req._query.sid;\n            if (isInitialRequest) {\n                if (this.opts.cookie) {\n                    headers[\"Set-Cookie\"] = [\n                        // @ts-ignore\n                        (0, cookie_1.serialize)(this.opts.cookie.name, id, this.opts.cookie),\n                    ];\n                }\n                this.emit(\"initial_headers\", headers, req);\n            }\n            this.emit(\"headers\", headers, req);\n        });\n        transport.onRequest(req);\n        this.clients[id] = socket;\n        this.clientsCount++;\n        socket.once(\"close\", () => {\n            delete this.clients[id];\n            this.clientsCount--;\n        });\n        this.emit(\"connection\", socket);\n        return transport;\n    }\n    async onWebTransportSession(session) {\n        const timeout = setTimeout(() => {\n            debug(\"the client failed to establish a bidirectional stream in the given period\");\n            session.close();\n        }, this.opts.upgradeTimeout);\n        const streamReader = session.incomingBidirectionalStreams.getReader();\n        const result = await streamReader.read();\n        if (result.done) {\n            debug(\"session is closed\");\n            return;\n        }\n        const stream = result.value;\n        const transformStream = (0, engine_io_parser_1.createPacketDecoderStream)(this.opts.maxHttpBufferSize, \"nodebuffer\");\n        const reader = stream.readable.pipeThrough(transformStream).getReader();\n        // reading the first packet of the stream\n        const { value, done } = await reader.read();\n        if (done) {\n            debug(\"stream is closed\");\n            return;\n        }\n        clearTimeout(timeout);\n        if (value.type !== \"open\") {\n            debug(\"invalid WebTransport handshake\");\n            return session.close();\n        }\n        if (value.data === undefined) {\n            const transport = new webtransport_1.WebTransport(session, stream, reader);\n            // note: we cannot use \"this.generateId()\", because there is no \"req\" argument\n            const id = base64id.generateId();\n            debug('handshaking client \"%s\" (WebTransport)', id);\n            const socket = new socket_1.Socket(id, this, transport, null, 4);\n            this.clients[id] = socket;\n            this.clientsCount++;\n            socket.once(\"close\", () => {\n                delete this.clients[id];\n                this.clientsCount--;\n            });\n            this.emit(\"connection\", socket);\n            return;\n        }\n        const sid = parseSessionId(value.data);\n        if (!sid) {\n            debug(\"invalid WebTransport handshake\");\n            return session.close();\n        }\n        const client = this.clients[sid];\n        if (!client) {\n            debug(\"upgrade attempt for closed client\");\n            session.close();\n        }\n        else if (client.upgrading) {\n            debug(\"transport has already been trying to upgrade\");\n            session.close();\n        }\n        else if (client.upgraded) {\n            debug(\"transport had already been upgraded\");\n            session.close();\n        }\n        else {\n            debug(\"upgrading existing transport\");\n            const transport = new webtransport_1.WebTransport(session, stream, reader);\n            client._maybeUpgrade(transport);\n        }\n    }\n}\nexports.BaseServer = BaseServer;\n/**\n * Protocol errors mappings.\n */\nBaseServer.errors = {\n    UNKNOWN_TRANSPORT: 0,\n    UNKNOWN_SID: 1,\n    BAD_HANDSHAKE_METHOD: 2,\n    BAD_REQUEST: 3,\n    FORBIDDEN: 4,\n    UNSUPPORTED_PROTOCOL_VERSION: 5,\n};\nBaseServer.errorMessages = {\n    0: \"Transport unknown\",\n    1: \"Session ID unknown\",\n    2: \"Bad handshake method\",\n    3: \"Bad request\",\n    4: \"Forbidden\",\n    5: \"Unsupported protocol version\",\n};\n/**\n * Exposes a subset of the http.ServerResponse interface, in order to be able to apply the middlewares to an upgrade\n * request.\n *\n * @see https://nodejs.org/api/http.html#class-httpserverresponse\n */\nclass WebSocketResponse {\n    constructor(req, socket) {\n        this.req = req;\n        this.socket = socket;\n        // temporarily store the response headers on the req object (see the \"headers\" event)\n        req[kResponseHeaders] = {};\n    }\n    setHeader(name, value) {\n        this.req[kResponseHeaders][name] = value;\n    }\n    getHeader(name) {\n        return this.req[kResponseHeaders][name];\n    }\n    removeHeader(name) {\n        delete this.req[kResponseHeaders][name];\n    }\n    write() { }\n    writeHead() { }\n    end() {\n        // we could return a proper error code, but the WebSocket client will emit an \"error\" event anyway.\n        this.socket.destroy();\n    }\n}\n/**\n * An Engine.IO server based on Node.js built-in HTTP server and the `ws` package for WebSocket connections.\n */\nclass Server extends BaseServer {\n    /**\n     * Initialize websocket server\n     *\n     * @protected\n     */\n    init() {\n        if (!~this.opts.transports.indexOf(\"websocket\"))\n            return;\n        if (this.ws)\n            this.ws.close();\n        this.ws = new this.opts.wsEngine({\n            noServer: true,\n            clientTracking: false,\n            perMessageDeflate: this.opts.perMessageDeflate,\n            maxPayload: this.opts.maxHttpBufferSize,\n        });\n        if (typeof this.ws.on === \"function\") {\n            this.ws.on(\"headers\", (headersArray, req) => {\n                // note: 'ws' uses an array of headers, while Engine.IO uses an object (response.writeHead() accepts both formats)\n                // we could also try to parse the array and then sync the values, but that will be error-prone\n                const additionalHeaders = req[kResponseHeaders] || {};\n                delete req[kResponseHeaders];\n                const isInitialRequest = !req._query.sid;\n                if (isInitialRequest) {\n                    this.emit(\"initial_headers\", additionalHeaders, req);\n                }\n                this.emit(\"headers\", additionalHeaders, req);\n                debug(\"writing headers: %j\", additionalHeaders);\n                Object.keys(additionalHeaders).forEach((key) => {\n                    headersArray.push(`${key}: ${additionalHeaders[key]}`);\n                });\n            });\n        }\n    }\n    cleanup() {\n        if (this.ws) {\n            debug(\"closing webSocketServer\");\n            this.ws.close();\n            // don't delete this.ws because it can be used again if the http server starts listening again\n        }\n    }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @private\n     */\n    prepare(req) {\n        // try to leverage pre-existing `req._query` (e.g: from connect)\n        if (!req._query) {\n            req._query = (~req.url.indexOf(\"?\") ? qs.parse((0, url_1.parse)(req.url).query) : {});\n        }\n    }\n    createTransport(transportName, req) {\n        return new transports_1.default[transportName](req);\n    }\n    /**\n     * Handles an Engine.IO HTTP request.\n     *\n     * @param {EngineRequest} req\n     * @param {ServerResponse} res\n     */\n    handleRequest(req, res) {\n        debug('handling \"%s\" http request \"%s\"', req.method, req.url);\n        this.prepare(req);\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => abortRequest(res, errorCode, errorContext);\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, false, callback);\n            }\n        });\n    }\n    /**\n     * Handles an Engine.IO HTTP Upgrade.\n     */\n    handleUpgrade(req, socket, upgradeHead) {\n        this.prepare(req);\n        const res = new WebSocketResponse(req, socket);\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                abortUpgrade(socket, errorCode, errorContext);\n                return;\n            }\n            const head = Buffer.from(upgradeHead);\n            upgradeHead = null;\n            // some middlewares (like express-session) wait for the writeHead() call to flush their headers\n            // see https://github.com/expressjs/session/blob/1010fadc2f071ddf2add94235d72224cf65159c6/index.js#L220-L244\n            res.writeHead();\n            // delegate to ws\n            this.ws.handleUpgrade(req, socket, head, (websocket) => {\n                this.onWebSocket(req, socket, websocket);\n            });\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, true, callback);\n            }\n        });\n    }\n    /**\n     * Called upon a ws.io connection.\n     *\n     * @param {ws.Socket} websocket\n     * @private\n     */\n    onWebSocket(req, socket, websocket) {\n        websocket.on(\"error\", onUpgradeError);\n        if (transports_1.default[req._query.transport] !== undefined &&\n            !transports_1.default[req._query.transport].prototype.handlesUpgrades) {\n            debug(\"transport doesnt handle upgraded requests\");\n            websocket.close();\n            return;\n        }\n        // get client id\n        const id = req._query.sid;\n        // keep a reference to the ws.Socket\n        req.websocket = websocket;\n        if (id) {\n            const client = this.clients[id];\n            if (!client) {\n                debug(\"upgrade attempt for closed client\");\n                websocket.close();\n            }\n            else if (client.upgrading) {\n                debug(\"transport has already been trying to upgrade\");\n                websocket.close();\n            }\n            else if (client.upgraded) {\n                debug(\"transport had already been upgraded\");\n                websocket.close();\n            }\n            else {\n                debug(\"upgrading existing transport\");\n                // transport error handling takes over\n                websocket.removeListener(\"error\", onUpgradeError);\n                const transport = this.createTransport(req._query.transport, req);\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n                client._maybeUpgrade(transport);\n            }\n        }\n        else {\n            const closeConnection = (errorCode, errorContext) => abortUpgrade(socket, errorCode, errorContext);\n            this.handshake(req._query.transport, req, closeConnection);\n        }\n        function onUpgradeError() {\n            debug(\"websocket error before upgrade\");\n            // websocket.close() not needed\n        }\n    }\n    /**\n     * Captures upgrade requests for a http.Server.\n     *\n     * @param {http.Server} server\n     * @param {Object} options\n     */\n    attach(server, options = {}) {\n        const path = this._computePath(options);\n        const destroyUpgradeTimeout = options.destroyUpgradeTimeout || 1000;\n        function check(req) {\n            // TODO use `path === new URL(...).pathname` in the next major release (ref: https://nodejs.org/api/url.html)\n            return path === req.url.slice(0, path.length);\n        }\n        // cache and clean up listeners\n        const listeners = server.listeners(\"request\").slice(0);\n        server.removeAllListeners(\"request\");\n        server.on(\"close\", this.close.bind(this));\n        server.on(\"listening\", this.init.bind(this));\n        // add request handler\n        server.on(\"request\", (req, res) => {\n            if (check(req)) {\n                debug('intercepting request for path \"%s\"', path);\n                this.handleRequest(req, res);\n            }\n            else {\n                let i = 0;\n                const l = listeners.length;\n                for (; i < l; i++) {\n                    listeners[i].call(server, req, res);\n                }\n            }\n        });\n        if (~this.opts.transports.indexOf(\"websocket\")) {\n            server.on(\"upgrade\", (req, socket, head) => {\n                if (check(req)) {\n                    this.handleUpgrade(req, socket, head);\n                }\n                else if (false !== options.destroyUpgrade) {\n                    // default node behavior is to disconnect when no handlers\n                    // but by adding a handler, we prevent that\n                    // and if no eio thing handles the upgrade\n                    // then the socket needs to die!\n                    setTimeout(function () {\n                        // @ts-ignore\n                        if (socket.writable && socket.bytesWritten <= 0) {\n                            socket.on(\"error\", (e) => {\n                                debug(\"error while destroying upgrade: %s\", e.message);\n                            });\n                            return socket.end();\n                        }\n                    }, destroyUpgradeTimeout);\n                }\n            });\n        }\n    }\n}\nexports.Server = Server;\n/**\n * Close the HTTP long-polling request\n *\n * @param res - the response object\n * @param errorCode - the error code\n * @param errorContext - additional error context\n *\n * @private\n */\nfunction abortRequest(res, errorCode, errorContext) {\n    const statusCode = errorCode === Server.errors.FORBIDDEN ? 403 : 400;\n    const message = errorContext && errorContext.message\n        ? errorContext.message\n        : Server.errorMessages[errorCode];\n    res.writeHead(statusCode, { \"Content-Type\": \"application/json\" });\n    res.end(JSON.stringify({\n        code: errorCode,\n        message,\n    }));\n}\n/**\n * Close the WebSocket connection\n *\n * @param {net.Socket} socket\n * @param {string} errorCode - the error code\n * @param {object} errorContext - additional error context\n */\nfunction abortUpgrade(socket, errorCode, errorContext = {}) {\n    socket.on(\"error\", () => {\n        debug(\"ignoring error from closed connection\");\n    });\n    if (socket.writable) {\n        const message = errorContext.message || Server.errorMessages[errorCode];\n        const length = Buffer.byteLength(message);\n        socket.write(\"HTTP/1.1 400 Bad Request\\r\\n\" +\n            \"Connection: close\\r\\n\" +\n            \"Content-type: text/html\\r\\n\" +\n            \"Content-Length: \" +\n            length +\n            \"\\r\\n\" +\n            \"\\r\\n\" +\n            message);\n    }\n    socket.destroy();\n}\n/* eslint-disable */\n/**\n * From https://github.com/nodejs/node/blob/v8.4.0/lib/_http_common.js#L303-L354\n *\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n *\n * checkInvalidHeaderChar() is currently designed to be inlinable by v8,\n * so take care when making changes to the implementation so that the source\n * code size does not exceed v8's default max_inlined_source_size setting.\n **/\n// prettier-ignore\nconst validHdrChars = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, // 0 - 15\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 32 - 47\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 48 - 63\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 80 - 95\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, // 112 - 127\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 128 ...\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 // ... 255\n];\nfunction checkInvalidHeaderChar(val) {\n    val += \"\";\n    if (val.length < 1)\n        return false;\n    if (!validHdrChars[val.charCodeAt(0)]) {\n        debug('invalid header, index 0, char \"%s\"', val.charCodeAt(0));\n        return true;\n    }\n    if (val.length < 2)\n        return false;\n    if (!validHdrChars[val.charCodeAt(1)]) {\n        debug('invalid header, index 1, char \"%s\"', val.charCodeAt(1));\n        return true;\n    }\n    if (val.length < 3)\n        return false;\n    if (!validHdrChars[val.charCodeAt(2)]) {\n        debug('invalid header, index 2, char \"%s\"', val.charCodeAt(2));\n        return true;\n    }\n    if (val.length < 4)\n        return false;\n    if (!validHdrChars[val.charCodeAt(3)]) {\n        debug('invalid header, index 3, char \"%s\"', val.charCodeAt(3));\n        return true;\n    }\n    for (let i = 4; i < val.length; ++i) {\n        if (!validHdrChars[val.charCodeAt(i)]) {\n            debug('invalid header, index \"%i\", char \"%s\"', i, val.charCodeAt(i));\n            return true;\n        }\n    }\n    return false;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Polling = void 0;\nconst transport_1 = require(\"../transport\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:polling\");\nconst compressionMethods = {\n    gzip: zlib_1.createGzip,\n    deflate: zlib_1.createDeflate,\n};\nclass Polling extends transport_1.Transport {\n    /**\n     * HTTP polling constructor.\n     */\n    constructor(req) {\n        super(req);\n        this.closeTimeout = 30 * 1000;\n    }\n    /**\n     * Transport name\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Overrides onRequest.\n     *\n     * @param req\n     *\n     * @private\n     */\n    onRequest(req) {\n        const res = req.res;\n        // remove the reference to the ServerResponse object (as the first request of the session is kept in memory by default)\n        req.res = null;\n        if (req.getMethod() === \"get\") {\n            this.onPollRequest(req, res);\n        }\n        else if (req.getMethod() === \"post\") {\n            this.onDataRequest(req, res);\n        }\n        else {\n            res.writeStatus(\"500 Internal Server Error\");\n            res.end();\n        }\n    }\n    /**\n     * The client sends a request awaiting for us to send data.\n     *\n     * @private\n     */\n    onPollRequest(req, res) {\n        if (this.req) {\n            debug(\"request overlap\");\n            // assert: this.res, '.req and .res should be (un)set together'\n            this.onError(\"overlap from client\");\n            res.writeStatus(\"500 Internal Server Error\");\n            res.end();\n            return;\n        }\n        debug(\"setting request\");\n        this.req = req;\n        this.res = res;\n        const onClose = () => {\n            this.writable = false;\n            this.onError(\"poll connection closed prematurely\");\n        };\n        const cleanup = () => {\n            this.req = this.res = null;\n        };\n        req.cleanup = cleanup;\n        res.onAborted(onClose);\n        this.writable = true;\n        this.emit(\"ready\");\n        // if we're still writable but had a pending close, trigger an empty send\n        if (this.writable && this.shouldClose) {\n            debug(\"triggering empty send to append close packet\");\n            this.send([{ type: \"noop\" }]);\n        }\n    }\n    /**\n     * The client sends a request with data.\n     *\n     * @private\n     */\n    onDataRequest(req, res) {\n        if (this.dataReq) {\n            // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n            this.onError(\"data request overlap from client\");\n            res.writeStatus(\"500 Internal Server Error\");\n            res.end();\n            return;\n        }\n        const expectedContentLength = Number(req.headers[\"content-length\"]);\n        if (!expectedContentLength) {\n            this.onError(\"content-length header required\");\n            res.writeStatus(\"411 Length Required\").end();\n            return;\n        }\n        if (expectedContentLength > this.maxHttpBufferSize) {\n            this.onError(\"payload too large\");\n            res.writeStatus(\"413 Payload Too Large\").end();\n            return;\n        }\n        const isBinary = \"application/octet-stream\" === req.headers[\"content-type\"];\n        if (isBinary && this.protocol === 4) {\n            return this.onError(\"invalid content\");\n        }\n        this.dataReq = req;\n        this.dataRes = res;\n        let buffer;\n        let offset = 0;\n        const headers = {\n            // text/html is required instead of text/plain to avoid an\n            // unwanted download dialog on certain user-agents (GH-43)\n            \"Content-Type\": \"text/html\",\n        };\n        this.headers(req, headers);\n        for (let key in headers) {\n            res.writeHeader(key, String(headers[key]));\n        }\n        const onEnd = (buffer) => {\n            this.onData(buffer.toString());\n            this.onDataRequestCleanup();\n            res.cork(() => {\n                res.end(\"ok\");\n            });\n        };\n        res.onAborted(() => {\n            this.onDataRequestCleanup();\n            this.onError(\"data request connection closed prematurely\");\n        });\n        res.onData((arrayBuffer, isLast) => {\n            const totalLength = offset + arrayBuffer.byteLength;\n            if (totalLength > expectedContentLength) {\n                this.onError(\"content-length mismatch\");\n                res.close(); // calls onAborted\n                return;\n            }\n            if (!buffer) {\n                if (isLast) {\n                    onEnd(Buffer.from(arrayBuffer));\n                    return;\n                }\n                buffer = Buffer.allocUnsafe(expectedContentLength);\n            }\n            Buffer.from(arrayBuffer).copy(buffer, offset);\n            if (isLast) {\n                if (totalLength != expectedContentLength) {\n                    this.onError(\"content-length mismatch\");\n                    res.writeStatus(\"400 Content-Length Mismatch\").end();\n                    this.onDataRequestCleanup();\n                    return;\n                }\n                onEnd(buffer);\n                return;\n            }\n            offset = totalLength;\n        });\n    }\n    /**\n     * Cleanup request.\n     *\n     * @private\n     */\n    onDataRequestCleanup() {\n        this.dataReq = this.dataRes = null;\n    }\n    /**\n     * Processes the incoming data payload.\n     *\n     * @param {String} encoded payload\n     * @private\n     */\n    onData(data) {\n        debug('received \"%s\"', data);\n        const callback = (packet) => {\n            if (\"close\" === packet.type) {\n                debug(\"got xhr close packet\");\n                this.onClose();\n                return false;\n            }\n            this.onPacket(packet);\n        };\n        if (this.protocol === 3) {\n            this.parser.decodePayload(data, callback);\n        }\n        else {\n            this.parser.decodePayload(data).forEach(callback);\n        }\n    }\n    /**\n     * Overrides onClose.\n     *\n     * @private\n     */\n    onClose() {\n        if (this.writable) {\n            // close pending poll request\n            this.send([{ type: \"noop\" }]);\n        }\n        super.onClose();\n    }\n    /**\n     * Writes a packet payload.\n     *\n     * @param {Object} packet\n     * @private\n     */\n    send(packets) {\n        this.writable = false;\n        if (this.shouldClose) {\n            debug(\"appending close packet to payload\");\n            packets.push({ type: \"close\" });\n            this.shouldClose();\n            this.shouldClose = null;\n        }\n        const doWrite = (data) => {\n            const compress = packets.some((packet) => {\n                return packet.options && packet.options.compress;\n            });\n            this.write(data, { compress });\n        };\n        if (this.protocol === 3) {\n            this.parser.encodePayload(packets, this.supportsBinary, doWrite);\n        }\n        else {\n            this.parser.encodePayload(packets, doWrite);\n        }\n    }\n    /**\n     * Writes data as response to poll request.\n     *\n     * @param {String} data\n     * @param {Object} options\n     * @private\n     */\n    write(data, options) {\n        debug('writing \"%s\"', data);\n        this.doWrite(data, options, () => {\n            this.req.cleanup();\n            this.emit(\"drain\");\n        });\n    }\n    /**\n     * Performs the write.\n     *\n     * @private\n     */\n    doWrite(data, options, callback) {\n        // explicit UTF-8 is required for pages not served under utf\n        const isString = typeof data === \"string\";\n        const contentType = isString\n            ? \"text/plain; charset=UTF-8\"\n            : \"application/octet-stream\";\n        const headers = {\n            \"Content-Type\": contentType,\n        };\n        const respond = (data) => {\n            this.headers(this.req, headers);\n            this.res.cork(() => {\n                Object.keys(headers).forEach((key) => {\n                    this.res.writeHeader(key, String(headers[key]));\n                });\n                this.res.end(data);\n            });\n            callback();\n        };\n        if (!this.httpCompression || !options.compress) {\n            respond(data);\n            return;\n        }\n        const len = isString ? Buffer.byteLength(data) : data.length;\n        if (len < this.httpCompression.threshold) {\n            respond(data);\n            return;\n        }\n        const encoding = accepts(this.req).encodings([\"gzip\", \"deflate\"]);\n        if (!encoding) {\n            respond(data);\n            return;\n        }\n        this.compress(data, encoding, (err, data) => {\n            if (err) {\n                this.res.writeStatus(\"500 Internal Server Error\");\n                this.res.end();\n                callback(err);\n                return;\n            }\n            headers[\"Content-Encoding\"] = encoding;\n            respond(data);\n        });\n    }\n    /**\n     * Compresses data.\n     *\n     * @private\n     */\n    compress(data, encoding, callback) {\n        debug(\"compressing\");\n        const buffers = [];\n        let nread = 0;\n        compressionMethods[encoding](this.httpCompression)\n            .on(\"error\", callback)\n            .on(\"data\", function (chunk) {\n            buffers.push(chunk);\n            nread += chunk.length;\n        })\n            .on(\"end\", function () {\n            callback(null, Buffer.concat(buffers, nread));\n        })\n            .end(data);\n    }\n    /**\n     * Closes the transport.\n     *\n     * @private\n     */\n    doClose(fn) {\n        debug(\"closing\");\n        let closeTimeoutTimer;\n        const onClose = () => {\n            clearTimeout(closeTimeoutTimer);\n            fn();\n            this.onClose();\n        };\n        if (this.writable) {\n            debug(\"transport writable - closing right away\");\n            this.send([{ type: \"close\" }]);\n            onClose();\n        }\n        else if (this.discarded) {\n            debug(\"transport discarded - closing right away\");\n            onClose();\n        }\n        else {\n            debug(\"transport not writable - buffering orderly close\");\n            this.shouldClose = onClose;\n            closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n        }\n    }\n    /**\n     * Returns headers for a response.\n     *\n     * @param req - request\n     * @param {Object} extra headers\n     * @private\n     */\n    headers(req, headers) {\n        headers = headers || {};\n        // prevent XSS warnings on IE\n        // https://github.com/LearnBoost/socket.io/pull/1333\n        const ua = req.headers[\"user-agent\"];\n        if (ua && (~ua.indexOf(\";MSIE\") || ~ua.indexOf(\"Trident/\"))) {\n            headers[\"X-XSS-Protection\"] = \"0\";\n        }\n        headers[\"cache-control\"] = \"no-store\";\n        this.emit(\"headers\", headers, req);\n        return headers;\n    }\n}\nexports.Polling = Polling;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocket = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:ws\");\nclass WebSocket extends transport_1.Transport {\n    /**\n     * WebSocket transport\n     *\n     * @param req\n     */\n    constructor(req) {\n        super(req);\n        this.writable = false;\n        this.perMessageDeflate = null;\n    }\n    /**\n     * Transport name\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Advertise upgrade support.\n     */\n    get handlesUpgrades() {\n        return true;\n    }\n    /**\n     * Writes a packet payload.\n     *\n     * @param {Array} packets\n     * @private\n     */\n    send(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const isLast = i + 1 === packets.length;\n            const send = (data) => {\n                const isBinary = typeof data !== \"string\";\n                const compress = this.perMessageDeflate &&\n                    Buffer.byteLength(data) > this.perMessageDeflate.threshold;\n                debug('writing \"%s\"', data);\n                this.socket.send(data, isBinary, compress);\n                if (isLast) {\n                    this.emit(\"drain\");\n                    this.writable = true;\n                    this.emit(\"ready\");\n                }\n            };\n            if (packet.options && typeof packet.options.wsPreEncoded === \"string\") {\n                send(packet.options.wsPreEncoded);\n            }\n            else {\n                this.parser.encodePacket(packet, this.supportsBinary, send);\n            }\n        }\n    }\n    /**\n     * Closes the transport.\n     *\n     * @private\n     */\n    doClose(fn) {\n        debug(\"closing\");\n        fn && fn();\n        // call fn first since socket.end() immediately emits a \"close\" event\n        this.socket.end();\n    }\n}\nexports.WebSocket = WebSocket;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst polling_1 = require(\"./polling\");\nconst websocket_1 = require(\"./websocket\");\nexports.default = {\n    polling: polling_1.Polling,\n    websocket: websocket_1.WebSocket,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uServer = void 0;\nconst debug_1 = require(\"debug\");\nconst server_1 = require(\"./server\");\nconst transports_uws_1 = require(\"./transports-uws\");\nconst debug = (0, debug_1.default)(\"engine:uws\");\n/**\n * An Engine.IO server based on the `uWebSockets.js` package.\n */\n// TODO export it into its own package\nclass uServer extends server_1.BaseServer {\n    init() { }\n    cleanup() { }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @private\n     */\n    prepare(req, res) {\n        req.method = req.getMethod().toUpperCase();\n        req.url = req.getUrl();\n        const params = new URLSearchParams(req.getQuery());\n        req._query = Object.fromEntries(params.entries());\n        req.headers = {};\n        req.forEach((key, value) => {\n            req.headers[key] = value;\n        });\n        req.connection = {\n            remoteAddress: Buffer.from(res.getRemoteAddressAsText()).toString(),\n        };\n        res.onAborted(() => {\n            debug(\"response has been aborted\");\n        });\n    }\n    createTransport(transportName, req) {\n        return new transports_uws_1.default[transportName](req);\n    }\n    /**\n     * Attach the engine to a µWebSockets.js server\n     * @param app\n     * @param options\n     */\n    attach(app /* : TemplatedApp */, options = {}) {\n        const path = this._computePath(options);\n        app\n            .any(path, this.handleRequest.bind(this))\n            //\n            .ws(path, {\n            compression: options.compression,\n            idleTimeout: options.idleTimeout,\n            maxBackpressure: options.maxBackpressure,\n            maxPayloadLength: this.opts.maxHttpBufferSize,\n            upgrade: this.handleUpgrade.bind(this),\n            open: (ws) => {\n                const transport = ws.getUserData().transport;\n                transport.socket = ws;\n                transport.writable = true;\n                transport.emit(\"ready\");\n            },\n            message: (ws, message, isBinary) => {\n                ws.getUserData().transport.onData(isBinary ? message : Buffer.from(message).toString());\n            },\n            close: (ws, code, message) => {\n                ws.getUserData().transport.onClose(code, message);\n            },\n        });\n    }\n    _applyMiddlewares(req, res, callback) {\n        if (this.middlewares.length === 0) {\n            return callback();\n        }\n        // needed to buffer headers until the status is computed\n        req.res = new ResponseWrapper(res);\n        super._applyMiddlewares(req, req.res, (err) => {\n            // some middlewares (like express-session) wait for the writeHead() call to flush their headers\n            // see https://github.com/expressjs/session/blob/1010fadc2f071ddf2add94235d72224cf65159c6/index.js#L220-L244\n            req.res.writeHead();\n            callback(err);\n        });\n    }\n    handleRequest(res, req) {\n        debug('handling \"%s\" http request \"%s\"', req.getMethod(), req.getUrl());\n        this.prepare(req, res);\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                this.abortRequest(req.res, errorCode, errorContext);\n                return;\n            }\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                // @ts-ignore\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext);\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(server_1.Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, false, callback);\n            }\n        });\n    }\n    handleUpgrade(res, req, context) {\n        debug(\"on upgrade\");\n        this.prepare(req, res);\n        req.res = res;\n        const callback = async (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                this.abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            const id = req._query.sid;\n            let transport;\n            if (id) {\n                const client = this.clients[id];\n                if (!client) {\n                    debug(\"upgrade attempt for closed client\");\n                    return res.close();\n                }\n                else if (client.upgrading) {\n                    debug(\"transport has already been trying to upgrade\");\n                    return res.close();\n                }\n                else if (client.upgraded) {\n                    debug(\"transport had already been upgraded\");\n                    return res.close();\n                }\n                else {\n                    debug(\"upgrading existing transport\");\n                    transport = this.createTransport(req._query.transport, req);\n                    client._maybeUpgrade(transport);\n                }\n            }\n            else {\n                transport = await this.handshake(req._query.transport, req, (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext));\n                if (!transport) {\n                    return;\n                }\n            }\n            // calling writeStatus() triggers the flushing of any header added in a middleware\n            req.res.writeStatus(\"101 Switching Protocols\");\n            res.upgrade({\n                transport,\n            }, req.getHeader(\"sec-websocket-key\"), req.getHeader(\"sec-websocket-protocol\"), req.getHeader(\"sec-websocket-extensions\"), context);\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(server_1.Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, true, callback);\n            }\n        });\n    }\n    abortRequest(res, errorCode, errorContext) {\n        const statusCode = errorCode === server_1.Server.errors.FORBIDDEN\n            ? \"403 Forbidden\"\n            : \"400 Bad Request\";\n        const message = errorContext && errorContext.message\n            ? errorContext.message\n            : server_1.Server.errorMessages[errorCode];\n        res.writeStatus(statusCode);\n        res.writeHeader(\"Content-Type\", \"application/json\");\n        res.end(JSON.stringify({\n            code: errorCode,\n            message,\n        }));\n    }\n}\nexports.uServer = uServer;\nclass ResponseWrapper {\n    constructor(res) {\n        this.res = res;\n        this.statusWritten = false;\n        this.headers = [];\n        this.isAborted = false;\n    }\n    set statusCode(status) {\n        if (!status) {\n            return;\n        }\n        // FIXME: handle all status codes?\n        this.writeStatus(status === 200 ? \"200 OK\" : \"204 No Content\");\n    }\n    writeHead(status) {\n        this.statusCode = status;\n    }\n    setHeader(key, value) {\n        if (Array.isArray(value)) {\n            value.forEach((val) => {\n                this.writeHeader(key, val);\n            });\n        }\n        else {\n            this.writeHeader(key, value);\n        }\n    }\n    removeHeader() {\n        // FIXME: not implemented\n    }\n    // needed by vary: https://github.com/jshttp/vary/blob/5d725d059b3871025cf753e9dfa08924d0bcfa8f/index.js#L134\n    getHeader() { }\n    writeStatus(status) {\n        if (this.isAborted)\n            return;\n        this.res.writeStatus(status);\n        this.statusWritten = true;\n        this.writeBufferedHeaders();\n        return this;\n    }\n    writeHeader(key, value) {\n        if (this.isAborted)\n            return;\n        if (key === \"Content-Length\") {\n            // the content length is automatically added by uWebSockets.js\n            return;\n        }\n        if (this.statusWritten) {\n            this.res.writeHeader(key, value);\n        }\n        else {\n            this.headers.push([key, value]);\n        }\n    }\n    writeBufferedHeaders() {\n        this.headers.forEach(([key, value]) => {\n            this.res.writeHeader(key, value);\n        });\n    }\n    end(data) {\n        if (this.isAborted)\n            return;\n        this.res.cork(() => {\n            if (!this.statusWritten) {\n                // status will be inferred as \"200 OK\"\n                this.writeBufferedHeaders();\n            }\n            this.res.end(data);\n        });\n    }\n    onData(fn) {\n        if (this.isAborted)\n            return;\n        this.res.onData(fn);\n    }\n    onAborted(fn) {\n        if (this.isAborted)\n            return;\n        this.res.onAborted(() => {\n            // Any attempt to use the UWS response object after abort will throw!\n            this.isAborted = true;\n            fn();\n        });\n    }\n    cork(fn) {\n        if (this.isAborted)\n            return;\n        this.res.cork(fn);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protocol = exports.Transport = exports.Socket = exports.uServer = exports.parser = exports.transports = exports.Server = void 0;\nexports.listen = listen;\nexports.attach = attach;\nconst http_1 = require(\"http\");\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst index_1 = require(\"./transports/index\");\nexports.transports = index_1.default;\nconst parser = require(\"engine.io-parser\");\nexports.parser = parser;\nvar userver_1 = require(\"./userver\");\nObject.defineProperty(exports, \"uServer\", { enumerable: true, get: function () { return userver_1.uServer; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nvar transport_1 = require(\"./transport\");\nObject.defineProperty(exports, \"Transport\", { enumerable: true, get: function () { return transport_1.Transport; } });\nexports.protocol = parser.protocol;\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n */\nfunction listen(port, options, fn) {\n    if (\"function\" === typeof options) {\n        fn = options;\n        options = {};\n    }\n    const server = (0, http_1.createServer)(function (req, res) {\n        res.writeHead(501);\n        res.end(\"Not Implemented\");\n    });\n    // create engine server\n    const engine = attach(server, options);\n    engine.httpServer = server;\n    server.listen(port, fn);\n    return engine;\n}\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n */\nfunction attach(server, options) {\n    const engine = new server_1.Server(options);\n    engine.attach(server, options);\n    return engine;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_js_1 = require(\"./is-binary.js\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if ((0, is_binary_js_1.isBinary)(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst binary_js_1 = require(\"./binary.js\");\nconst is_binary_js_1 = require(\"./is-binary.js\");\nconst debug_1 = require(\"debug\"); // debug()\nconst debug = (0, debug_1.default)(\"socket.io-parser\"); // debug()\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if ((0, is_binary_js_1.hasBinary)(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = (0, binary_js_1.deconstructPacket)(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends component_emitter_1.Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if ((0, is_binary_js_1.isBinary)(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\nexports.Decoder = Decoder;\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = (0, binary_js_1.reconstructPacket)(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst debugModule = require(\"debug\");\nconst url = require(\"url\");\nconst debug = debugModule(\"socket.io:client\");\nclass Client {\n    /**\n     * Client constructor.\n     *\n     * @param server instance\n     * @param conn\n     * @package\n     */\n    constructor(server, conn) {\n        this.sockets = new Map();\n        this.nsps = new Map();\n        this.server = server;\n        this.conn = conn;\n        this.encoder = server.encoder;\n        this.decoder = new server._parser.Decoder();\n        this.id = conn.id;\n        this.setup();\n    }\n    /**\n     * @return the reference to the request that originated the Engine.IO connection\n     *\n     * @public\n     */\n    get request() {\n        return this.conn.request;\n    }\n    /**\n     * Sets up event listeners.\n     *\n     * @private\n     */\n    setup() {\n        this.onclose = this.onclose.bind(this);\n        this.ondata = this.ondata.bind(this);\n        this.onerror = this.onerror.bind(this);\n        this.ondecoded = this.ondecoded.bind(this);\n        // @ts-ignore\n        this.decoder.on(\"decoded\", this.ondecoded);\n        this.conn.on(\"data\", this.ondata);\n        this.conn.on(\"error\", this.onerror);\n        this.conn.on(\"close\", this.onclose);\n        this.connectTimeout = setTimeout(() => {\n            if (this.nsps.size === 0) {\n                debug(\"no namespace joined yet, close the client\");\n                this.close();\n            }\n            else {\n                debug(\"the client has already joined a namespace, nothing to do\");\n            }\n        }, this.server._connectTimeout);\n    }\n    /**\n     * Connects a client to a namespace.\n     *\n     * @param {String} name - the namespace\n     * @param {Object} auth - the auth parameters\n     * @private\n     */\n    connect(name, auth = {}) {\n        if (this.server._nsps.has(name)) {\n            debug(\"connecting to namespace %s\", name);\n            return this.doConnect(name, auth);\n        }\n        this.server._checkNamespace(name, auth, (dynamicNspName) => {\n            if (dynamicNspName) {\n                this.doConnect(name, auth);\n            }\n            else {\n                debug(\"creation of namespace %s was denied\", name);\n                this._packet({\n                    type: socket_io_parser_1.PacketType.CONNECT_ERROR,\n                    nsp: name,\n                    data: {\n                        message: \"Invalid namespace\",\n                    },\n                });\n            }\n        });\n    }\n    /**\n     * Connects a client to a namespace.\n     *\n     * @param name - the namespace\n     * @param {Object} auth - the auth parameters\n     *\n     * @private\n     */\n    doConnect(name, auth) {\n        const nsp = this.server.of(name);\n        nsp._add(this, auth, (socket) => {\n            this.sockets.set(socket.id, socket);\n            this.nsps.set(nsp.name, socket);\n            if (this.connectTimeout) {\n                clearTimeout(this.connectTimeout);\n                this.connectTimeout = undefined;\n            }\n        });\n    }\n    /**\n     * Disconnects from all namespaces and closes transport.\n     *\n     * @private\n     */\n    _disconnect() {\n        for (const socket of this.sockets.values()) {\n            socket.disconnect();\n        }\n        this.sockets.clear();\n        this.close();\n    }\n    /**\n     * Removes a socket. Called by each `Socket`.\n     *\n     * @private\n     */\n    _remove(socket) {\n        if (this.sockets.has(socket.id)) {\n            const nsp = this.sockets.get(socket.id).nsp.name;\n            this.sockets.delete(socket.id);\n            this.nsps.delete(nsp);\n        }\n        else {\n            debug(\"ignoring remove for %s\", socket.id);\n        }\n    }\n    /**\n     * Closes the underlying connection.\n     *\n     * @private\n     */\n    close() {\n        if (\"open\" === this.conn.readyState) {\n            debug(\"forcing transport close\");\n            this.conn.close();\n            this.onclose(\"forced server close\");\n        }\n    }\n    /**\n     * Writes a packet to the transport.\n     *\n     * @param {Object} packet object\n     * @param {Object} opts\n     * @private\n     */\n    _packet(packet, opts = {}) {\n        if (this.conn.readyState !== \"open\") {\n            debug(\"ignoring packet write %j\", packet);\n            return;\n        }\n        const encodedPackets = opts.preEncoded\n            ? packet // previous versions of the adapter incorrectly used socket.packet() instead of writeToEngine()\n            : this.encoder.encode(packet);\n        this.writeToEngine(encodedPackets, opts);\n    }\n    writeToEngine(encodedPackets, opts) {\n        if (opts.volatile && !this.conn.transport.writable) {\n            debug(\"volatile packet is discarded since the transport is not currently writable\");\n            return;\n        }\n        const packets = Array.isArray(encodedPackets)\n            ? encodedPackets\n            : [encodedPackets];\n        for (const encodedPacket of packets) {\n            this.conn.write(encodedPacket, opts);\n        }\n    }\n    /**\n     * Called with incoming transport data.\n     *\n     * @private\n     */\n    ondata(data) {\n        // try/catch is needed for protocol violations (GH-1880)\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            debug(\"invalid packet format\");\n            this.onerror(e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        let namespace;\n        let authPayload;\n        if (this.conn.protocol === 3) {\n            const parsed = url.parse(packet.nsp, true);\n            namespace = parsed.pathname;\n            authPayload = parsed.query;\n        }\n        else {\n            namespace = packet.nsp;\n            authPayload = packet.data;\n        }\n        const socket = this.nsps.get(namespace);\n        if (!socket && packet.type === socket_io_parser_1.PacketType.CONNECT) {\n            this.connect(namespace, authPayload);\n        }\n        else if (socket &&\n            packet.type !== socket_io_parser_1.PacketType.CONNECT &&\n            packet.type !== socket_io_parser_1.PacketType.CONNECT_ERROR) {\n            process.nextTick(function () {\n                socket._onpacket(packet);\n            });\n        }\n        else {\n            debug(\"invalid state (packet type: %s)\", packet.type);\n            this.close();\n        }\n    }\n    /**\n     * Handles an error.\n     *\n     * @param {Object} err object\n     * @private\n     */\n    onerror(err) {\n        for (const socket of this.sockets.values()) {\n            socket._onerror(err);\n        }\n        this.conn.close();\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"client close with reason %s\", reason);\n        // ignore a potential subsequent `close` event\n        this.destroy();\n        // `nsps` and `sockets` are cleaned up seamlessly\n        for (const socket of this.sockets.values()) {\n            socket._onclose(reason, description);\n        }\n        this.sockets.clear();\n        this.decoder.destroy(); // clean up decoder\n    }\n    /**\n     * Cleans up event listeners.\n     * @private\n     */\n    destroy() {\n        this.conn.removeListener(\"data\", this.ondata);\n        this.conn.removeListener(\"error\", this.onerror);\n        this.conn.removeListener(\"close\", this.onclose);\n        // @ts-ignore\n        this.decoder.removeListener(\"decoded\", this.ondecoded);\n        if (this.connectTimeout) {\n            clearTimeout(this.connectTimeout);\n            this.connectTimeout = undefined;\n        }\n    }\n}\nexports.Client = Client;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst events_1 = require(\"events\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends events_1.EventEmitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        return super.on(ev, listener);\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        return super.once(ev, listener);\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        return super.emit(ev, ...args);\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        return super.emit(ev, ...args);\n    }\n    /**\n     * Emits an event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can get around the strict typing. This is useful for\n     * calling `emit.apply`, which can be called as `emitUntyped.apply`.\n     *\n     * @param ev Event name\n     * @param args Arguments to emit along with the event\n     */\n    emitUntyped(ev, ...args) {\n        return super.emit(ev, ...args);\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RESERVED_EVENTS = void 0;\nexports.RESERVED_EVENTS = new Set([\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\",\n]);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteSocket = exports.BroadcastOperator = void 0;\nconst socket_types_1 = require(\"./socket-types\");\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nclass BroadcastOperator {\n    constructor(adapter, rooms = new Set(), exceptRooms = new Set(), flags = {}) {\n        this.adapter = adapter;\n        this.rooms = rooms;\n        this.exceptRooms = exceptRooms;\n        this.flags = flags;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        const rooms = new Set(this.rooms);\n        if (Array.isArray(room)) {\n            room.forEach((r) => rooms.add(r));\n        }\n        else {\n            rooms.add(room);\n        }\n        return new BroadcastOperator(this.adapter, rooms, this.exceptRooms, this.flags);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.to(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        const exceptRooms = new Set(this.exceptRooms);\n        if (Array.isArray(room)) {\n            room.forEach((r) => exceptRooms.add(r));\n        }\n        else {\n            exceptRooms.add(room);\n        }\n        return new BroadcastOperator(this.adapter, this.rooms, exceptRooms, this.flags);\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new BroadcastOperator instance\n     */\n    compress(compress) {\n        const flags = Object.assign({}, this.flags, { compress });\n        return new BroadcastOperator(this.adapter, this.rooms, this.exceptRooms, flags);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new BroadcastOperator instance\n     */\n    get volatile() {\n        const flags = Object.assign({}, this.flags, { volatile: true });\n        return new BroadcastOperator(this.adapter, this.rooms, this.exceptRooms, flags);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        const flags = Object.assign({}, this.flags, { local: true });\n        return new BroadcastOperator(this.adapter, this.rooms, this.exceptRooms, flags);\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        const flags = Object.assign({}, this.flags, { timeout });\n        return new BroadcastOperator(this.adapter, this.rooms, this.exceptRooms, flags);\n    }\n    /**\n     * Emits to all clients.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients\n     * io.emit(\"foo\", \"bar\");\n     *\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an acknowledgement expected from all connected clients\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @return Always true\n     */\n    emit(ev, ...args) {\n        if (socket_types_1.RESERVED_EVENTS.has(ev)) {\n            throw new Error(`\"${String(ev)}\" is a reserved event name`);\n        }\n        // set up packet object\n        const data = [ev, ...args];\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: data,\n        };\n        const withAck = typeof data[data.length - 1] === \"function\";\n        if (!withAck) {\n            this.adapter.broadcast(packet, {\n                rooms: this.rooms,\n                except: this.exceptRooms,\n                flags: this.flags,\n            });\n            return true;\n        }\n        const ack = data.pop();\n        let timedOut = false;\n        let responses = [];\n        const timer = setTimeout(() => {\n            timedOut = true;\n            ack.apply(this, [\n                new Error(\"operation has timed out\"),\n                this.flags.expectSingleResponse ? null : responses,\n            ]);\n        }, this.flags.timeout);\n        let expectedServerCount = -1;\n        let actualServerCount = 0;\n        let expectedClientCount = 0;\n        const checkCompleteness = () => {\n            if (!timedOut &&\n                expectedServerCount === actualServerCount &&\n                responses.length === expectedClientCount) {\n                clearTimeout(timer);\n                ack.apply(this, [\n                    null,\n                    this.flags.expectSingleResponse ? responses[0] : responses,\n                ]);\n            }\n        };\n        this.adapter.broadcastWithAck(packet, {\n            rooms: this.rooms,\n            except: this.exceptRooms,\n            flags: this.flags,\n        }, (clientCount) => {\n            // each Socket.IO server in the cluster sends the number of clients that were notified\n            expectedClientCount += clientCount;\n            actualServerCount++;\n            checkCompleteness();\n        }, (clientResponse) => {\n            // each client sends an acknowledgement\n            responses.push(clientResponse);\n            checkCompleteness();\n        });\n        this.adapter.serverCount().then((serverCount) => {\n            expectedServerCount = serverCount;\n            checkCompleteness();\n        });\n        return true;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement from all clients.\n     *\n     * @example\n     * try {\n     *   const responses = await io.timeout(1000).emitWithAck(\"some-event\");\n     *   console.log(responses); // one response per client\n     * } catch (e) {\n     *   // some clients did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when all clients have acknowledged the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            args.push((err, responses) => {\n                if (err) {\n                    err.responses = responses;\n                    return reject(err);\n                }\n                else {\n                    return resolve(responses);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Gets a list of clients.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link fetchSockets} instead.\n     */\n    allSockets() {\n        if (!this.adapter) {\n            throw new Error(\"No adapter for this namespace, are you trying to get the list of clients of a dynamic namespace?\");\n        }\n        return this.adapter.sockets(this.rooms);\n    }\n    /**\n     * Returns the matching socket instances. This method works across a cluster of several Socket.IO servers.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return this.adapter\n            .fetchSockets({\n            rooms: this.rooms,\n            except: this.exceptRooms,\n            flags: this.flags,\n        })\n            .then((sockets) => {\n            return sockets.map((socket) => {\n                if (socket.server) {\n                    return socket; // local instance\n                }\n                else {\n                    return new RemoteSocket(this.adapter, socket);\n                }\n            });\n        });\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        this.adapter.addSockets({\n            rooms: this.rooms,\n            except: this.exceptRooms,\n            flags: this.flags,\n        }, Array.isArray(room) ? room : [room]);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        this.adapter.delSockets({\n            rooms: this.rooms,\n            except: this.exceptRooms,\n            flags: this.flags,\n        }, Array.isArray(room) ? room : [room]);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        this.adapter.disconnectSockets({\n            rooms: this.rooms,\n            except: this.exceptRooms,\n            flags: this.flags,\n        }, close);\n    }\n}\nexports.BroadcastOperator = BroadcastOperator;\n/**\n * Expose of subset of the attributes and methods of the Socket class\n */\nclass RemoteSocket {\n    constructor(adapter, details) {\n        this.id = details.id;\n        this.handshake = details.handshake;\n        this.rooms = new Set(details.rooms);\n        this.data = details.data;\n        this.operator = new BroadcastOperator(adapter, new Set([this.id]), new Set(), {\n            expectSingleResponse: true, // so that remoteSocket.emit() with acknowledgement behaves like socket.emit()\n        });\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * const sockets = await io.fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   if (someCondition) {\n     *     socket.timeout(1000).emit(\"some-event\", (err) => {\n     *       if (err) {\n     *         // the client did not acknowledge the event in the given delay\n     *       }\n     *     });\n     *   }\n     * }\n     *\n     * // note: if possible, using a room instead of looping over all sockets is preferable\n     * io.timeout(1000).to(someConditionRoom).emit(\"some-event\", (err, responses) => {\n     *   // ...\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return this.operator.timeout(timeout);\n    }\n    emit(ev, ...args) {\n        return this.operator.emit(ev, ...args);\n    }\n    /**\n     * Joins a room.\n     *\n     * @param {String|Array} room - room or array of rooms\n     */\n    join(room) {\n        return this.operator.socketsJoin(room);\n    }\n    /**\n     * Leaves a room.\n     *\n     * @param {String} room\n     */\n    leave(room) {\n        return this.operator.socketsLeave(room);\n    }\n    /**\n     * Disconnects this client.\n     *\n     * @param {Boolean} close - if `true`, closes the underlying connection\n     * @return {Socket} self\n     */\n    disconnect(close = false) {\n        this.operator.disconnectSockets(close);\n        return this;\n    }\n}\nexports.RemoteSocket = RemoteSocket;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst typed_events_1 = require(\"./typed-events\");\nconst base64id_1 = __importDefault(require(\"base64id\"));\nconst broadcast_operator_1 = require(\"./broadcast-operator\");\nconst socket_types_1 = require(\"./socket-types\");\nconst debug = (0, debug_1.default)(\"socket.io:socket\");\nconst RECOVERABLE_DISCONNECT_REASONS = new Set([\n    \"transport error\",\n    \"transport close\",\n    \"forced close\",\n    \"ping timeout\",\n    \"server shutting down\",\n    \"forced server close\",\n]);\nfunction noop() { }\n/**\n * This is the main object for interacting with a client.\n *\n * A Socket belongs to a given {@link Namespace} and uses an underlying {@link Client} to communicate.\n *\n * Within each {@link Namespace}, you can also define arbitrary channels (called \"rooms\") that the {@link Socket} can\n * join and leave. That provides a convenient way to broadcast to a group of socket instances.\n *\n * @example\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // join the room named \"room1\"\n *   socket.join(\"room1\");\n *\n *   // broadcast to everyone in the room named \"room1\"\n *   io.to(\"room1\").emit(\"hello\");\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n */\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * Interface to a `Client` for a given `Namespace`.\n     *\n     * @param {Namespace} nsp\n     * @param {Client} client\n     * @param {Object} auth\n     * @package\n     */\n    constructor(nsp, client, auth, previousSession) {\n        super();\n        this.nsp = nsp;\n        this.client = client;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted to the client, the data attribute and the rooms will be restored.\n         */\n        this.recovered = false;\n        /**\n         * Additional information that can be attached to the Socket instance and which will be used in the\n         * {@link Server.fetchSockets()} method.\n         */\n        this.data = {};\n        /**\n         * Whether the socket is currently connected or not.\n         *\n         * @example\n         * io.use((socket, next) => {\n         *   console.log(socket.connected); // false\n         *   next();\n         * });\n         *\n         * io.on(\"connection\", (socket) => {\n         *   console.log(socket.connected); // true\n         * });\n         */\n        this.connected = false;\n        this.acks = new Map();\n        this.fns = [];\n        this.flags = {};\n        this.server = nsp.server;\n        this.adapter = this.nsp.adapter;\n        if (previousSession) {\n            this.id = previousSession.sid;\n            this.pid = previousSession.pid;\n            previousSession.rooms.forEach((room) => this.join(room));\n            this.data = previousSession.data;\n            previousSession.missedPackets.forEach((packet) => {\n                this.packet({\n                    type: socket_io_parser_1.PacketType.EVENT,\n                    data: packet,\n                });\n            });\n            this.recovered = true;\n        }\n        else {\n            if (client.conn.protocol === 3) {\n                // @ts-ignore\n                this.id = nsp.name !== \"/\" ? nsp.name + \"#\" + client.id : client.id;\n            }\n            else {\n                this.id = base64id_1.default.generateId(); // don't reuse the Engine.IO id because it's sensitive information\n            }\n            if (this.server._opts.connectionStateRecovery) {\n                this.pid = base64id_1.default.generateId();\n            }\n        }\n        this.handshake = this.buildHandshake(auth);\n        // prevents crash when the socket receives an \"error\" event without listener\n        this.on(\"error\", noop);\n    }\n    /**\n     * Builds the `handshake` BC object\n     *\n     * @private\n     */\n    buildHandshake(auth) {\n        var _a, _b, _c, _d;\n        return {\n            headers: ((_a = this.request) === null || _a === void 0 ? void 0 : _a.headers) || {},\n            time: new Date() + \"\",\n            address: this.conn.remoteAddress,\n            xdomain: !!((_b = this.request) === null || _b === void 0 ? void 0 : _b.headers.origin),\n            // @ts-ignore\n            secure: !this.request || !!this.request.connection.encrypted,\n            issued: +new Date(),\n            url: (_c = this.request) === null || _c === void 0 ? void 0 : _c.url,\n            // @ts-ignore\n            query: ((_d = this.request) === null || _d === void 0 ? void 0 : _d._query) || {},\n            auth,\n        };\n    }\n    /**\n     * Emits to this client.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.emit(\"hello\", \"world\");\n     *\n     *   // all serializable datastructures are supported (no need to call JSON.stringify)\n     *   socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Buffer.from([6]) });\n     *\n     *   // with an acknowledgement from the client\n     *   socket.emit(\"hello\", \"world\", (val) => {\n     *     // ...\n     *   });\n     * });\n     *\n     * @return Always returns `true`.\n     */\n    emit(ev, ...args) {\n        if (socket_types_1.RESERVED_EVENTS.has(ev)) {\n            throw new Error(`\"${String(ev)}\" is a reserved event name`);\n        }\n        const data = [ev, ...args];\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: data,\n        };\n        // access last argument to see if it's an ACK callback\n        if (typeof data[data.length - 1] === \"function\") {\n            const id = this.nsp._ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            this.registerAckCallback(id, data.pop());\n            packet.id = id;\n        }\n        const flags = Object.assign({}, this.flags);\n        this.flags = {};\n        // @ts-ignore\n        if (this.nsp.server.opts.connectionStateRecovery) {\n            // this ensures the packet is stored and can be transmitted upon reconnection\n            this.adapter.broadcast(packet, {\n                rooms: new Set([this.id]),\n                except: new Set(),\n                flags,\n            });\n        }\n        else {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet, flags);\n        }\n        return true;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * io.on(\"connection\", async (socket) => {\n     *   // without timeout\n     *   const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     *   // with a specific timeout\n     *   try {\n     *     const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     *   } catch (err) {\n     *     // the client did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @return a Promise that will be fulfilled when the client acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * @private\n     */\n    registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks.set(id, ack);\n            return;\n        }\n        const timer = setTimeout(() => {\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            this.acks.delete(id);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks.set(id, (...args) => {\n            clearTimeout(timer);\n            ack.apply(this, [null, ...args]);\n        });\n    }\n    /**\n     * Targets a room when broadcasting.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // the “foo” event will be broadcast to all connected clients in the “room-101” room, except this socket\n     *   socket.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     *   // the code above is equivalent to:\n     *   io.to(\"room-101\").except(socket.id).emit(\"foo\", \"bar\");\n     *\n     *   // with an array of rooms (a client will be notified at most once)\n     *   socket.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     *   // with multiple chained calls\n     *   socket.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     * });\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return this.newBroadcastOperator().to(room);\n    }\n    /**\n     * Targets a room when broadcasting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // disconnect all clients in the \"room-101\" room, except this socket\n     *   socket.in(\"room-101\").disconnectSockets();\n     * });\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.newBroadcastOperator().in(room);\n    }\n    /**\n     * Excludes a room when broadcasting.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     *   // and this socket\n     *   socket.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     *   // with an array of rooms\n     *   socket.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     *   // with multiple chained calls\n     *   socket.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     * });\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return this.newBroadcastOperator().except(room);\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.send(\"hello\");\n     *\n     *   // this is equivalent to\n     *   socket.emit(\"message\", \"hello\");\n     * });\n     *\n     * @return self\n     */\n    send(...args) {\n        this.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        this.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param {Object} packet - packet object\n     * @param {Object} opts - options\n     * @private\n     */\n    packet(packet, opts = {}) {\n        packet.nsp = this.nsp.name;\n        opts.compress = false !== opts.compress;\n        this.client._packet(packet, opts);\n    }\n    /**\n     * Joins a room.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // join a single room\n     *   socket.join(\"room1\");\n     *\n     *   // join multiple rooms\n     *   socket.join([\"room1\", \"room2\"]);\n     * });\n     *\n     * @param {String|Array} rooms - room or array of rooms\n     * @return a Promise or nothing, depending on the adapter\n     */\n    join(rooms) {\n        debug(\"join room %s\", rooms);\n        return this.adapter.addAll(this.id, new Set(Array.isArray(rooms) ? rooms : [rooms]));\n    }\n    /**\n     * Leaves a room.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // leave a single room\n     *   socket.leave(\"room1\");\n     *\n     *   // leave multiple rooms\n     *   socket.leave(\"room1\").leave(\"room2\");\n     * });\n     *\n     * @param {String} room\n     * @return a Promise or nothing, depending on the adapter\n     */\n    leave(room) {\n        debug(\"leave room %s\", room);\n        return this.adapter.del(this.id, room);\n    }\n    /**\n     * Leave all rooms.\n     *\n     * @private\n     */\n    leaveAll() {\n        this.adapter.delAll(this.id);\n    }\n    /**\n     * Called by `Namespace` upon successful\n     * middleware execution (ie: authorization).\n     * Socket is added to namespace array before\n     * call to join, so adapters can access it.\n     *\n     * @private\n     */\n    _onconnect() {\n        debug(\"socket connected - writing packet\");\n        this.connected = true;\n        this.join(this.id);\n        if (this.conn.protocol === 3) {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT });\n        }\n        else {\n            this.packet({\n                type: socket_io_parser_1.PacketType.CONNECT,\n                data: { sid: this.id, pid: this.pid },\n            });\n        }\n    }\n    /**\n     * Called with each packet. Called by `Client`.\n     *\n     * @param {Object} packet\n     * @private\n     */\n    _onpacket(packet) {\n        debug(\"got packet %j\", packet);\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n        }\n    }\n    /**\n     * Called upon event packet.\n     *\n     * @param {Packet} packet - packet object\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        this.dispatch(args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @param {Number} id - packet id\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function () {\n            // prevent double callbacks\n            if (sent)\n                return;\n            const args = Array.prototype.slice.call(arguments);\n            debug(\"sending ack %j\", args);\n            self.packet({\n                id: id,\n                type: socket_io_parser_1.PacketType.ACK,\n                data: args,\n            });\n            sent = true;\n        };\n    }\n    /**\n     * Called upon ack packet.\n     *\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks.get(packet.id);\n        if (\"function\" == typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            this.acks.delete(packet.id);\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon client disconnect packet.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"got disconnect packet\");\n        this._onclose(\"client namespace disconnect\");\n    }\n    /**\n     * Handles a client error.\n     *\n     * @private\n     */\n    _onerror(err) {\n        // FIXME the meaning of the \"error\" event is overloaded:\n        //  - it can be sent by the client (`socket.emit(\"error\")`)\n        //  - it can be emitted when the connection encounters an error (an invalid packet for example)\n        //  - it can be emitted when a packet is rejected in a middleware (`socket.use()`)\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Called upon closing. Called by `Client`.\n     *\n     * @param {String} reason\n     * @param description\n     * @throw {Error} optional error object\n     *\n     * @private\n     */\n    _onclose(reason, description) {\n        if (!this.connected)\n            return this;\n        debug(\"closing socket - reason %s\", reason);\n        this.emitReserved(\"disconnecting\", reason, description);\n        if (this.server._opts.connectionStateRecovery &&\n            RECOVERABLE_DISCONNECT_REASONS.has(reason)) {\n            debug(\"connection state recovery is enabled for sid %s\", this.id);\n            this.adapter.persistSession({\n                sid: this.id,\n                pid: this.pid,\n                rooms: [...this.rooms],\n                data: this.data,\n            });\n        }\n        this._cleanup();\n        this.client._remove(this);\n        this.connected = false;\n        this.emitReserved(\"disconnect\", reason, description);\n        return;\n    }\n    /**\n     * Makes the socket leave all the rooms it was part of and prevents it from joining any other room\n     *\n     * @private\n     */\n    _cleanup() {\n        this.leaveAll();\n        this.nsp._remove(this);\n        this.join = noop;\n    }\n    /**\n     * Produces an `error` packet.\n     *\n     * @param {Object} err - error object\n     *\n     * @private\n     */\n    _error(err) {\n        this.packet({ type: socket_io_parser_1.PacketType.CONNECT_ERROR, data: err });\n    }\n    /**\n     * Disconnects this client.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // disconnect this socket (the connection might be kept alive for other namespaces)\n     *   socket.disconnect();\n     *\n     *   // disconnect this socket and close the underlying connection\n     *   socket.disconnect(true);\n     * })\n     *\n     * @param {Boolean} close - if `true`, closes the underlying connection\n     * @return self\n     */\n    disconnect(close = false) {\n        if (!this.connected)\n            return this;\n        if (close) {\n            this.client._disconnect();\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n            this._onclose(\"server namespace disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.compress(false).emit(\"hello\");\n     * });\n     *\n     * @param {Boolean} compress - if `true`, compresses the sending data\n     * @return {Socket} self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.volatile.emit(\"hello\"); // the client may or may not receive it\n     * });\n     *\n     * @return {Socket} self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to every sockets but the\n     * sender.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // the “foo” event will be broadcast to all connected clients, except this socket\n     *   socket.broadcast.emit(\"foo\", \"bar\");\n     * });\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get broadcast() {\n        return this.newBroadcastOperator();\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   // the “foo” event will be broadcast to all connected clients on this node, except this socket\n     *   socket.local.emit(\"foo\", \"bar\");\n     * });\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return this.newBroadcastOperator().local;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the client:\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.timeout(5000).emit(\"my-event\", (err) => {\n     *     if (err) {\n     *       // the client did not acknowledge the event in the given delay\n     *     }\n     *   });\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Dispatch incoming event to socket listeners.\n     *\n     * @param {Array} event - event that will get emitted\n     * @private\n     */\n    dispatch(event) {\n        debug(\"dispatching an event %j\", event);\n        this.run(event, (err) => {\n            process.nextTick(() => {\n                if (err) {\n                    return this._onerror(err);\n                }\n                if (this.connected) {\n                    super.emitUntyped.apply(this, event);\n                }\n                else {\n                    debug(\"ignore packet received after disconnection\");\n                }\n            });\n        });\n    }\n    /**\n     * Sets up socket middleware.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.use(([event, ...args], next) => {\n     *     if (isUnauthorized(event)) {\n     *       return next(new Error(\"unauthorized event\"));\n     *     }\n     *     // do not forget to call next\n     *     next();\n     *   });\n     *\n     *   socket.on(\"error\", (err) => {\n     *     if (err && err.message === \"unauthorized event\") {\n     *       socket.disconnect();\n     *     }\n     *   });\n     * });\n     *\n     * @param {Function} fn - middleware function (event, next)\n     * @return {Socket} self\n     */\n    use(fn) {\n        this.fns.push(fn);\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming event.\n     *\n     * @param {Array} event - event that will get emitted\n     * @param {Function} fn - last fn call in the middleware\n     * @private\n     */\n    run(event, fn) {\n        if (!this.fns.length)\n            return fn();\n        const fns = this.fns.slice(0);\n        function run(i) {\n            fns[i](event, (err) => {\n                // upon error, short-circuit\n                if (err)\n                    return fn(err);\n                // if no middleware left, summon callback\n                if (!fns[i + 1])\n                    return fn();\n                // go on to next\n                run(i + 1);\n            });\n        }\n        run(0);\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * A reference to the request that originated the underlying Engine.IO Socket.\n     */\n    get request() {\n        return this.client.request;\n    }\n    /**\n     * A reference to the underlying Client transport connection (Engine.IO Socket object).\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   console.log(socket.conn.transport.name); // prints \"polling\" or \"websocket\"\n     *\n     *   socket.conn.once(\"upgrade\", () => {\n     *     console.log(socket.conn.transport.name); // prints \"websocket\"\n     *   });\n     * });\n     */\n    get conn() {\n        return this.client.conn;\n    }\n    /**\n     * Returns the rooms the socket is currently in.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   console.log(socket.rooms); // Set { <socket.id> }\n     *\n     *   socket.join(\"room1\");\n     *\n     *   console.log(socket.rooms); // Set { <socket.id>, \"room1\" }\n     * });\n     */\n    get rooms() {\n        return this.adapter.socketRooms(this.id) || new Set();\n    }\n    /**\n     * Adds a listener that will be fired when any event is received. The event name is passed as the first argument to\n     * the callback.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.onAny((event, ...args) => {\n     *     console.log(`got event ${event}`);\n     *   });\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is received. The event name is passed as the first argument to\n     * the callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is received.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   const catchAllListener = (event, ...args) => {\n     *     console.log(`got event ${event}`);\n     *   }\n     *\n     *   socket.onAny(catchAllListener);\n     *\n     *   // remove a specific listener\n     *   socket.offAny(catchAllListener);\n     *\n     *   // or remove all listeners\n     *   socket.offAny();\n     * });\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is sent. The event name is passed as the first argument to\n     * the callback.\n     *\n     * Note: acknowledgements sent to the client are not included.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.onAnyOutgoing((event, ...args) => {\n     *     console.log(`sent event ${event}`);\n     *   });\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   socket.prependAnyOutgoing((event, ...args) => {\n     *     console.log(`sent event ${event}`);\n     *   });\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is sent.\n     *\n     * @example\n     * io.on(\"connection\", (socket) => {\n     *   const catchAllListener = (event, ...args) => {\n     *     console.log(`sent event ${event}`);\n     *   }\n     *\n     *   socket.onAnyOutgoing(catchAllListener);\n     *\n     *   // remove a specific listener\n     *   socket.offAnyOutgoing(catchAllListener);\n     *\n     *   // or remove all listeners\n     *   socket.offAnyOutgoing();\n     * });\n     *\n     * @param listener - the catch-all listener\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent (emit or broadcast)\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n    newBroadcastOperator() {\n        const flags = Object.assign({}, this.flags);\n        this.flags = {};\n        return new broadcast_operator_1.BroadcastOperator(this.adapter, new Set(), new Set([this.id]), flags);\n    }\n}\nexports.Socket = Socket;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.RESERVED_EVENTS = void 0;\nconst socket_1 = require(\"./socket\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst broadcast_operator_1 = require(\"./broadcast-operator\");\nconst debug = (0, debug_1.default)(\"socket.io:namespace\");\nexports.RESERVED_EVENTS = new Set([\"connect\", \"connection\", \"new_namespace\"]);\n/**\n * A Namespace is a communication channel that allows you to split the logic of your application over a single shared\n * connection.\n *\n * Each namespace has its own:\n *\n * - event handlers\n *\n * ```\n * io.of(\"/orders\").on(\"connection\", (socket) => {\n *   socket.on(\"order:list\", () => {});\n *   socket.on(\"order:create\", () => {});\n * });\n *\n * io.of(\"/users\").on(\"connection\", (socket) => {\n *   socket.on(\"user:list\", () => {});\n * });\n * ```\n *\n * - rooms\n *\n * ```\n * const orderNamespace = io.of(\"/orders\");\n *\n * orderNamespace.on(\"connection\", (socket) => {\n *   socket.join(\"room1\");\n *   orderNamespace.to(\"room1\").emit(\"hello\");\n * });\n *\n * const userNamespace = io.of(\"/users\");\n *\n * userNamespace.on(\"connection\", (socket) => {\n *   socket.join(\"room1\"); // distinct from the room in the \"orders\" namespace\n *   userNamespace.to(\"room1\").emit(\"holà\");\n * });\n * ```\n *\n * - middlewares\n *\n * ```\n * const orderNamespace = io.of(\"/orders\");\n *\n * orderNamespace.use((socket, next) => {\n *   // ensure the socket has access to the \"orders\" namespace\n * });\n *\n * const userNamespace = io.of(\"/users\");\n *\n * userNamespace.use((socket, next) => {\n *   // ensure the socket has access to the \"users\" namespace\n * });\n * ```\n */\nclass Namespace extends typed_events_1.StrictEventEmitter {\n    /**\n     * Namespace constructor.\n     *\n     * @param server instance\n     * @param name\n     */\n    constructor(server, name) {\n        super();\n        /**\n         * A map of currently connected sockets.\n         */\n        this.sockets = new Map();\n        /**\n         * A map of currently connecting sockets.\n         */\n        this._preConnectSockets = new Map();\n        this._fns = [];\n        /** @private */\n        this._ids = 0;\n        this.server = server;\n        this.name = name;\n        this._initAdapter();\n    }\n    /**\n     * Initializes the `Adapter` for this nsp.\n     * Run upon changing adapter by `Server#adapter`\n     * in addition to the constructor.\n     *\n     * @private\n     */\n    _initAdapter() {\n        // @ts-ignore\n        this.adapter = new (this.server.adapter())(this);\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n    use(fn) {\n        this._fns.push(fn);\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming client.\n     *\n     * @param socket - the socket that will get added\n     * @param fn - last fn call in the middleware\n     * @private\n     */\n    run(socket, fn) {\n        if (!this._fns.length)\n            return fn();\n        const fns = this._fns.slice(0);\n        function run(i) {\n            fns[i](socket, (err) => {\n                // upon error, short-circuit\n                if (err)\n                    return fn(err);\n                // if no middleware left, summon callback\n                if (!fns[i + 1])\n                    return fn();\n                // go on to next\n                run(i + 1);\n            });\n        }\n        run(0);\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * myNamespace.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * myNamespace.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * myNamespace.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // disconnect all clients in the \"room-101\" room\n     * myNamespace.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * myNamespace.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * myNamespace.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * myNamespace.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).except(room);\n    }\n    /**\n     * Adds a new client.\n     *\n     * @return {Socket}\n     * @private\n     */\n    async _add(client, auth, fn) {\n        var _a;\n        debug(\"adding socket to nsp %s\", this.name);\n        const socket = await this._createSocket(client, auth);\n        this._preConnectSockets.set(socket.id, socket);\n        if (\n        // @ts-ignore\n        ((_a = this.server.opts.connectionStateRecovery) === null || _a === void 0 ? void 0 : _a.skipMiddlewares) &&\n            socket.recovered &&\n            client.conn.readyState === \"open\") {\n            return this._doConnect(socket, fn);\n        }\n        this.run(socket, (err) => {\n            process.nextTick(() => {\n                if (\"open\" !== client.conn.readyState) {\n                    debug(\"next called after client was closed - ignoring socket\");\n                    socket._cleanup();\n                    return;\n                }\n                if (err) {\n                    debug(\"middleware error, sending CONNECT_ERROR packet to the client\");\n                    socket._cleanup();\n                    if (client.conn.protocol === 3) {\n                        return socket._error(err.data || err.message);\n                    }\n                    else {\n                        return socket._error({\n                            message: err.message,\n                            data: err.data,\n                        });\n                    }\n                }\n                this._doConnect(socket, fn);\n            });\n        });\n    }\n    async _createSocket(client, auth) {\n        const sessionId = auth.pid;\n        const offset = auth.offset;\n        if (\n        // @ts-ignore\n        this.server.opts.connectionStateRecovery &&\n            typeof sessionId === \"string\" &&\n            typeof offset === \"string\") {\n            let session;\n            try {\n                session = await this.adapter.restoreSession(sessionId, offset);\n            }\n            catch (e) {\n                debug(\"error while restoring session: %s\", e);\n            }\n            if (session) {\n                debug(\"connection state recovered for sid %s\", session.sid);\n                return new socket_1.Socket(this, client, auth, session);\n            }\n        }\n        return new socket_1.Socket(this, client, auth);\n    }\n    _doConnect(socket, fn) {\n        this._preConnectSockets.delete(socket.id);\n        this.sockets.set(socket.id, socket);\n        // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n        socket._onconnect();\n        if (fn)\n            fn(socket);\n        // fire user-set events\n        this.emitReserved(\"connect\", socket);\n        this.emitReserved(\"connection\", socket);\n    }\n    /**\n     * Removes a client. Called by each `Socket`.\n     *\n     * @private\n     */\n    _remove(socket) {\n        this.sockets.delete(socket.id) || this._preConnectSockets.delete(socket.id);\n    }\n    /**\n     * Emits to all connected clients.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * myNamespace.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the clients\n     * myNamespace.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @return Always true\n     */\n    emit(ev, ...args) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).emit(ev, ...args);\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.send(\"hello\");\n     *\n     * // this is equivalent to\n     * myNamespace.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        // This type-cast is needed because EmitEvents likely doesn't have `message` as a key.\n        // if you specify the EmitEvents, the type of args will be never.\n        this.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Sends a `message` event. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        // This type-cast is needed because EmitEvents likely doesn't have `message` as a key.\n        // if you specify the EmitEvents, the type of args will be never.\n        this.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.serverSideEmit(\"hello\", \"world\");\n     *\n     * myNamespace.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * myNamespace.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some servers did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per server (except the current one)\n     *   }\n     * });\n     *\n     * myNamespace.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(ev, ...args) {\n        if (exports.RESERVED_EVENTS.has(ev)) {\n            throw new Error(`\"${String(ev)}\" is a reserved event name`);\n        }\n        args.unshift(ev);\n        this.adapter.serverSideEmit(args);\n        return true;\n    }\n    /**\n     * Sends a message and expect an acknowledgement from the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * try {\n     *   const responses = await myNamespace.serverSideEmitWithAck(\"ping\");\n     *   console.log(responses); // one response per server (except the current one)\n     * } catch (e) {\n     *   // some servers did not acknowledge the event in the given delay\n     * }\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments\n     *\n     * @return a Promise that will be fulfilled when all servers have acknowledged the event\n     */\n    serverSideEmitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            args.push((err, responses) => {\n                if (err) {\n                    err.responses = responses;\n                    return reject(err);\n                }\n                else {\n                    return resolve(responses);\n                }\n            });\n            this.serverSideEmit(ev, ...args);\n        });\n    }\n    /**\n     * Called when a packet is received from another Socket.IO server\n     *\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     *\n     * @private\n     */\n    _onServerSideEmit(args) {\n        super.emitUntyped.apply(this, args);\n    }\n    /**\n     * Gets a list of clients.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Namespace#serverSideEmit} or\n     * {@link Namespace#fetchSockets} instead.\n     */\n    allSockets() {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return self\n     */\n    get volatile() {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * myNamespace.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * myNamespace.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).timeout(timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // return all Socket instances\n     * const sockets = await myNamespace.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await myNamespace.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // make all socket instances join the \"room1\" room\n     * myNamespace.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * myNamespace.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // make all socket instances leave the \"room1\" room\n     * myNamespace.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * myNamespace.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * myNamespace.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * myNamespace.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        return new broadcast_operator_1.BroadcastOperator(this.adapter).disconnectSockets(close);\n    }\n}\nexports.Namespace = Namespace;\n", "// imported from https://github.com/unshiftio/yeast\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.yeast = exports.decode = exports.encode = void 0;\nconst alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n    let encoded = \"\";\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\nexports.encode = encode;\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\nexports.decode = decode;\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return (seed = 0), (prev = now);\n    return now + \".\" + encode(seed++);\n}\nexports.yeast = yeast;\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionAwareAdapter = exports.Adapter = void 0;\nconst events_1 = require(\"events\");\nconst yeast_1 = require(\"./contrib/yeast\");\nconst WebSocket = require(\"ws\");\nconst canPreComputeFrame = typeof ((_a = WebSocket === null || WebSocket === void 0 ? void 0 : WebSocket.Sender) === null || _a === void 0 ? void 0 : _a.frame) === \"function\";\nclass Adapter extends events_1.EventEmitter {\n    /**\n     * In-memory adapter constructor.\n     *\n     * @param {Namespace} nsp\n     */\n    constructor(nsp) {\n        super();\n        this.nsp = nsp;\n        this.rooms = new Map();\n        this.sids = new Map();\n        this.encoder = nsp.server.encoder;\n    }\n    /**\n     * To be overridden\n     */\n    init() { }\n    /**\n     * To be overridden\n     */\n    close() { }\n    /**\n     * Returns the number of Socket.IO servers in the cluster\n     *\n     * @public\n     */\n    serverCount() {\n        return Promise.resolve(1);\n    }\n    /**\n     * Adds a socket to a list of room.\n     *\n     * @param {SocketId}  id      the socket id\n     * @param {Set<Room>} rooms   a set of rooms\n     * @public\n     */\n    addAll(id, rooms) {\n        if (!this.sids.has(id)) {\n            this.sids.set(id, new Set());\n        }\n        for (const room of rooms) {\n            this.sids.get(id).add(room);\n            if (!this.rooms.has(room)) {\n                this.rooms.set(room, new Set());\n                this.emit(\"create-room\", room);\n            }\n            if (!this.rooms.get(room).has(id)) {\n                this.rooms.get(room).add(id);\n                this.emit(\"join-room\", room, id);\n            }\n        }\n    }\n    /**\n     * Removes a socket from a room.\n     *\n     * @param {SocketId} id     the socket id\n     * @param {Room}     room   the room name\n     */\n    del(id, room) {\n        if (this.sids.has(id)) {\n            this.sids.get(id).delete(room);\n        }\n        this._del(room, id);\n    }\n    _del(room, id) {\n        const _room = this.rooms.get(room);\n        if (_room != null) {\n            const deleted = _room.delete(id);\n            if (deleted) {\n                this.emit(\"leave-room\", room, id);\n            }\n            if (_room.size === 0 && this.rooms.delete(room)) {\n                this.emit(\"delete-room\", room);\n            }\n        }\n    }\n    /**\n     * Removes a socket from all rooms it's joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    delAll(id) {\n        if (!this.sids.has(id)) {\n            return;\n        }\n        for (const room of this.sids.get(id)) {\n            this._del(room, id);\n        }\n        this.sids.delete(id);\n    }\n    /**\n     * Broadcasts a packet.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @public\n     */\n    broadcast(packet, opts) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this._encode(packet, packetOpts);\n        this.apply(opts, (socket) => {\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n    }\n    /**\n     * Broadcasts a packet and expects multiple acknowledgements.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @param clientCountCallback - the number of clients that received the packet\n     * @param ack                 - the callback that will be called for each client response\n     *\n     * @public\n     */\n    broadcastWithAck(packet, opts, clientCountCallback, ack) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        // we can use the same id for each packet, since the _ids counter is common (no duplicate)\n        packet.id = this.nsp._ids++;\n        const encodedPackets = this._encode(packet, packetOpts);\n        let clientCount = 0;\n        this.apply(opts, (socket) => {\n            // track the total number of acknowledgements that are expected\n            clientCount++;\n            // call the ack callback for each client response\n            socket.acks.set(packet.id, ack);\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n        clientCountCallback(clientCount);\n    }\n    _encode(packet, packetOpts) {\n        const encodedPackets = this.encoder.encode(packet);\n        if (canPreComputeFrame &&\n            encodedPackets.length === 1 &&\n            typeof encodedPackets[0] === \"string\") {\n            // \"4\" being the \"message\" packet type in the Engine.IO protocol\n            const data = Buffer.from(\"4\" + encodedPackets[0]);\n            // see https://github.com/websockets/ws/issues/617#issuecomment-283002469\n            packetOpts.wsPreEncodedFrame = WebSocket.Sender.frame(data, {\n                readOnly: false,\n                mask: false,\n                rsv1: false,\n                opcode: 1,\n                fin: true,\n            });\n        }\n        return encodedPackets;\n    }\n    /**\n     * Gets a list of sockets by sid.\n     *\n     * @param {Set<Room>} rooms   the explicit set of rooms to check.\n     */\n    sockets(rooms) {\n        const sids = new Set();\n        this.apply({ rooms }, (socket) => {\n            sids.add(socket.id);\n        });\n        return Promise.resolve(sids);\n    }\n    /**\n     * Gets the list of rooms a given socket has joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    socketRooms(id) {\n        return this.sids.get(id);\n    }\n    /**\n     * Returns the matching socket instances\n     *\n     * @param opts - the filters to apply\n     */\n    fetchSockets(opts) {\n        const sockets = [];\n        this.apply(opts, (socket) => {\n            sockets.push(socket);\n        });\n        return Promise.resolve(sockets);\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to join\n     */\n    addSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            socket.join(rooms);\n        });\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to leave\n     */\n    delSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            rooms.forEach((room) => socket.leave(room));\n        });\n    }\n    /**\n     * Makes the matching socket instances disconnect\n     *\n     * @param opts - the filters to apply\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(opts, close) {\n        this.apply(opts, (socket) => {\n            socket.disconnect(close);\n        });\n    }\n    apply(opts, callback) {\n        const rooms = opts.rooms;\n        const except = this.computeExceptSids(opts.except);\n        if (rooms.size) {\n            const ids = new Set();\n            for (const room of rooms) {\n                if (!this.rooms.has(room))\n                    continue;\n                for (const id of this.rooms.get(room)) {\n                    if (ids.has(id) || except.has(id))\n                        continue;\n                    const socket = this.nsp.sockets.get(id);\n                    if (socket) {\n                        callback(socket);\n                        ids.add(id);\n                    }\n                }\n            }\n        }\n        else {\n            for (const [id] of this.sids) {\n                if (except.has(id))\n                    continue;\n                const socket = this.nsp.sockets.get(id);\n                if (socket)\n                    callback(socket);\n            }\n        }\n    }\n    computeExceptSids(exceptRooms) {\n        const exceptSids = new Set();\n        if (exceptRooms && exceptRooms.size > 0) {\n            for (const room of exceptRooms) {\n                if (this.rooms.has(room)) {\n                    this.rooms.get(room).forEach((sid) => exceptSids.add(sid));\n                }\n            }\n        }\n        return exceptSids;\n    }\n    /**\n     * Send a packet to the other Socket.IO servers in the cluster\n     * @param packet - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(packet) {\n        console.warn(\"this adapter does not support the serverSideEmit() functionality\");\n    }\n    /**\n     * Save the client session in order to restore it upon reconnection.\n     */\n    persistSession(session) { }\n    /**\n     * Restore the session and find the packets that were missed by the client.\n     * @param pid\n     * @param offset\n     */\n    restoreSession(pid, offset) {\n        return null;\n    }\n}\nexports.Adapter = Adapter;\nclass SessionAwareAdapter extends Adapter {\n    constructor(nsp) {\n        super(nsp);\n        this.nsp = nsp;\n        this.sessions = new Map();\n        this.packets = [];\n        this.maxDisconnectionDuration =\n            nsp.server.opts.connectionStateRecovery.maxDisconnectionDuration;\n        const timer = setInterval(() => {\n            const threshold = Date.now() - this.maxDisconnectionDuration;\n            this.sessions.forEach((session, sessionId) => {\n                const hasExpired = session.disconnectedAt < threshold;\n                if (hasExpired) {\n                    this.sessions.delete(sessionId);\n                }\n            });\n            for (let i = this.packets.length - 1; i >= 0; i--) {\n                const hasExpired = this.packets[i].emittedAt < threshold;\n                if (hasExpired) {\n                    this.packets.splice(0, i + 1);\n                    break;\n                }\n            }\n        }, 60 * 1000);\n        // prevents the timer from keeping the process alive\n        timer.unref();\n    }\n    persistSession(session) {\n        session.disconnectedAt = Date.now();\n        this.sessions.set(session.pid, session);\n    }\n    restoreSession(pid, offset) {\n        const session = this.sessions.get(pid);\n        if (!session) {\n            // the session may have expired\n            return null;\n        }\n        const hasExpired = session.disconnectedAt + this.maxDisconnectionDuration < Date.now();\n        if (hasExpired) {\n            // the session has expired\n            this.sessions.delete(pid);\n            return null;\n        }\n        const index = this.packets.findIndex((packet) => packet.id === offset);\n        if (index === -1) {\n            // the offset may be too old\n            return null;\n        }\n        const missedPackets = [];\n        for (let i = index + 1; i < this.packets.length; i++) {\n            const packet = this.packets[i];\n            if (shouldIncludePacket(session.rooms, packet.opts)) {\n                missedPackets.push(packet.data);\n            }\n        }\n        return Promise.resolve(Object.assign(Object.assign({}, session), { missedPackets }));\n    }\n    broadcast(packet, opts) {\n        var _a;\n        const isEventPacket = packet.type === 2;\n        // packets with acknowledgement are not stored because the acknowledgement function cannot be serialized and\n        // restored on another server upon reconnection\n        const withoutAcknowledgement = packet.id === undefined;\n        const notVolatile = ((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.volatile) === undefined;\n        if (isEventPacket && withoutAcknowledgement && notVolatile) {\n            const id = (0, yeast_1.yeast)();\n            // the offset is stored at the end of the data array, so the client knows the ID of the last packet it has\n            // processed (and the format is backward-compatible)\n            packet.data.push(id);\n            this.packets.push({\n                id,\n                opts,\n                data: packet.data,\n                emittedAt: Date.now(),\n            });\n        }\n        super.broadcast(packet, opts);\n    }\n}\nexports.SessionAwareAdapter = SessionAwareAdapter;\nfunction shouldIncludePacket(sessionRooms, opts) {\n    const included = opts.rooms.size === 0 || sessionRooms.some((room) => opts.rooms.has(room));\n    const notExcluded = sessionRooms.every((room) => !opts.except.has(room));\n    return included && notExcluded;\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClusterAdapterWithHeartbeat = exports.ClusterAdapter = exports.MessageType = void 0;\nconst in_memory_adapter_1 = require(\"./in-memory-adapter\");\nconst debug_1 = require(\"debug\");\nconst crypto_1 = require(\"crypto\");\nconst debug = (0, debug_1.debug)(\"socket.io-adapter\");\nconst EMITTER_UID = \"emitter\";\nconst DEFAULT_TIMEOUT = 5000;\nfunction randomId() {\n    return (0, crypto_1.randomBytes)(8).toString(\"hex\");\n}\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"INITIAL_HEARTBEAT\"] = 1] = \"INITIAL_HEARTBEAT\";\n    MessageType[MessageType[\"HEARTBEAT\"] = 2] = \"HEARTBEAT\";\n    MessageType[MessageType[\"BROADCAST\"] = 3] = \"BROADCAST\";\n    MessageType[MessageType[\"SOCKETS_JOIN\"] = 4] = \"SOCKETS_JOIN\";\n    MessageType[MessageType[\"SOCKETS_LEAVE\"] = 5] = \"SOCKETS_LEAVE\";\n    MessageType[MessageType[\"DISCONNECT_SOCKETS\"] = 6] = \"DISCONNECT_SOCKETS\";\n    MessageType[MessageType[\"FETCH_SOCKETS\"] = 7] = \"FETCH_SOCKETS\";\n    MessageType[MessageType[\"FETCH_SOCKETS_RESPONSE\"] = 8] = \"FETCH_SOCKETS_RESPONSE\";\n    MessageType[MessageType[\"SERVER_SIDE_EMIT\"] = 9] = \"SERVER_SIDE_EMIT\";\n    MessageType[MessageType[\"SERVER_SIDE_EMIT_RESPONSE\"] = 10] = \"SERVER_SIDE_EMIT_RESPONSE\";\n    MessageType[MessageType[\"BROADCAST_CLIENT_COUNT\"] = 11] = \"BROADCAST_CLIENT_COUNT\";\n    MessageType[MessageType[\"BROADCAST_ACK\"] = 12] = \"BROADCAST_ACK\";\n    MessageType[MessageType[\"ADAPTER_CLOSE\"] = 13] = \"ADAPTER_CLOSE\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nfunction encodeOptions(opts) {\n    return {\n        rooms: [...opts.rooms],\n        except: [...opts.except],\n        flags: opts.flags,\n    };\n}\nfunction decodeOptions(opts) {\n    return {\n        rooms: new Set(opts.rooms),\n        except: new Set(opts.except),\n        flags: opts.flags,\n    };\n}\n/**\n * A cluster-ready adapter. Any extending class must:\n *\n * - implement {@link ClusterAdapter#doPublish} and {@link ClusterAdapter#doPublishResponse}\n * - call {@link ClusterAdapter#onMessage} and {@link ClusterAdapter#onResponse}\n */\nclass ClusterAdapter extends in_memory_adapter_1.Adapter {\n    constructor(nsp) {\n        super(nsp);\n        this.requests = new Map();\n        this.ackRequests = new Map();\n        this.uid = randomId();\n    }\n    /**\n     * Called when receiving a message from another member of the cluster.\n     *\n     * @param message\n     * @param offset\n     * @protected\n     */\n    onMessage(message, offset) {\n        if (message.uid === this.uid) {\n            return debug(\"[%s] ignore message from self\", this.uid);\n        }\n        debug(\"[%s] new event of type %d from %s\", this.uid, message.type, message.uid);\n        switch (message.type) {\n            case MessageType.BROADCAST: {\n                const withAck = message.data.requestId !== undefined;\n                if (withAck) {\n                    super.broadcastWithAck(message.data.packet, decodeOptions(message.data.opts), (clientCount) => {\n                        debug(\"[%s] waiting for %d client acknowledgements\", this.uid, clientCount);\n                        this.publishResponse(message.uid, {\n                            type: MessageType.BROADCAST_CLIENT_COUNT,\n                            data: {\n                                requestId: message.data.requestId,\n                                clientCount,\n                            },\n                        });\n                    }, (arg) => {\n                        debug(\"[%s] received acknowledgement with value %j\", this.uid, arg);\n                        this.publishResponse(message.uid, {\n                            type: MessageType.BROADCAST_ACK,\n                            data: {\n                                requestId: message.data.requestId,\n                                packet: arg,\n                            },\n                        });\n                    });\n                }\n                else {\n                    const packet = message.data.packet;\n                    const opts = decodeOptions(message.data.opts);\n                    this.addOffsetIfNecessary(packet, opts, offset);\n                    super.broadcast(packet, opts);\n                }\n                break;\n            }\n            case MessageType.SOCKETS_JOIN:\n                super.addSockets(decodeOptions(message.data.opts), message.data.rooms);\n                break;\n            case MessageType.SOCKETS_LEAVE:\n                super.delSockets(decodeOptions(message.data.opts), message.data.rooms);\n                break;\n            case MessageType.DISCONNECT_SOCKETS:\n                super.disconnectSockets(decodeOptions(message.data.opts), message.data.close);\n                break;\n            case MessageType.FETCH_SOCKETS: {\n                debug(\"[%s] calling fetchSockets with opts %j\", this.uid, message.data.opts);\n                super\n                    .fetchSockets(decodeOptions(message.data.opts))\n                    .then((localSockets) => {\n                    this.publishResponse(message.uid, {\n                        type: MessageType.FETCH_SOCKETS_RESPONSE,\n                        data: {\n                            requestId: message.data.requestId,\n                            sockets: localSockets.map((socket) => {\n                                // remove sessionStore from handshake, as it may contain circular references\n                                const _a = socket.handshake, { sessionStore } = _a, handshake = __rest(_a, [\"sessionStore\"]);\n                                return {\n                                    id: socket.id,\n                                    handshake,\n                                    rooms: [...socket.rooms],\n                                    data: socket.data,\n                                };\n                            }),\n                        },\n                    });\n                });\n                break;\n            }\n            case MessageType.SERVER_SIDE_EMIT: {\n                const packet = message.data.packet;\n                const withAck = message.data.requestId !== undefined;\n                if (!withAck) {\n                    this.nsp._onServerSideEmit(packet);\n                    return;\n                }\n                let called = false;\n                const callback = (arg) => {\n                    // only one argument is expected\n                    if (called) {\n                        return;\n                    }\n                    called = true;\n                    debug(\"[%s] calling acknowledgement with %j\", this.uid, arg);\n                    this.publishResponse(message.uid, {\n                        type: MessageType.SERVER_SIDE_EMIT_RESPONSE,\n                        data: {\n                            requestId: message.data.requestId,\n                            packet: arg,\n                        },\n                    });\n                };\n                this.nsp._onServerSideEmit([...packet, callback]);\n                break;\n            }\n            // @ts-ignore\n            case MessageType.BROADCAST_CLIENT_COUNT:\n            // @ts-ignore\n            case MessageType.BROADCAST_ACK:\n            // @ts-ignore\n            case MessageType.FETCH_SOCKETS_RESPONSE:\n            // @ts-ignore\n            case MessageType.SERVER_SIDE_EMIT_RESPONSE:\n                // extending classes may not make a distinction between a ClusterMessage and a ClusterResponse payload and may\n                // always call the onMessage() method\n                this.onResponse(message);\n                break;\n            default:\n                debug(\"[%s] unknown message type: %s\", this.uid, message.type);\n        }\n    }\n    /**\n     * Called when receiving a response from another member of the cluster.\n     *\n     * @param response\n     * @protected\n     */\n    onResponse(response) {\n        var _a, _b;\n        const requestId = response.data.requestId;\n        debug(\"[%s] received response %s to request %s\", this.uid, response.type, requestId);\n        switch (response.type) {\n            case MessageType.BROADCAST_CLIENT_COUNT: {\n                (_a = this.ackRequests\n                    .get(requestId)) === null || _a === void 0 ? void 0 : _a.clientCountCallback(response.data.clientCount);\n                break;\n            }\n            case MessageType.BROADCAST_ACK: {\n                (_b = this.ackRequests.get(requestId)) === null || _b === void 0 ? void 0 : _b.ack(response.data.packet);\n                break;\n            }\n            case MessageType.FETCH_SOCKETS_RESPONSE: {\n                const request = this.requests.get(requestId);\n                if (!request) {\n                    return;\n                }\n                request.current++;\n                response.data.sockets.forEach((socket) => request.responses.push(socket));\n                if (request.current === request.expected) {\n                    clearTimeout(request.timeout);\n                    request.resolve(request.responses);\n                    this.requests.delete(requestId);\n                }\n                break;\n            }\n            case MessageType.SERVER_SIDE_EMIT_RESPONSE: {\n                const request = this.requests.get(requestId);\n                if (!request) {\n                    return;\n                }\n                request.current++;\n                request.responses.push(response.data.packet);\n                if (request.current === request.expected) {\n                    clearTimeout(request.timeout);\n                    request.resolve(null, request.responses);\n                    this.requests.delete(requestId);\n                }\n                break;\n            }\n            default:\n                // @ts-ignore\n                debug(\"[%s] unknown response type: %s\", this.uid, response.type);\n        }\n    }\n    async broadcast(packet, opts) {\n        var _a;\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            try {\n                const offset = await this.publishAndReturnOffset({\n                    type: MessageType.BROADCAST,\n                    data: {\n                        packet,\n                        opts: encodeOptions(opts),\n                    },\n                });\n                this.addOffsetIfNecessary(packet, opts, offset);\n            }\n            catch (e) {\n                return debug(\"[%s] error while broadcasting message: %s\", this.uid, e.message);\n            }\n        }\n        super.broadcast(packet, opts);\n    }\n    /**\n     * Adds an offset at the end of the data array in order to allow the client to receive any missed packets when it\n     * reconnects after a temporary disconnection.\n     *\n     * @param packet\n     * @param opts\n     * @param offset\n     * @private\n     */\n    addOffsetIfNecessary(packet, opts, offset) {\n        var _a;\n        if (!this.nsp.server.opts.connectionStateRecovery) {\n            return;\n        }\n        const isEventPacket = packet.type === 2;\n        // packets with acknowledgement are not stored because the acknowledgement function cannot be serialized and\n        // restored on another server upon reconnection\n        const withoutAcknowledgement = packet.id === undefined;\n        const notVolatile = ((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.volatile) === undefined;\n        if (isEventPacket && withoutAcknowledgement && notVolatile) {\n            packet.data.push(offset);\n        }\n    }\n    broadcastWithAck(packet, opts, clientCountCallback, ack) {\n        var _a;\n        const onlyLocal = (_a = opts === null || opts === void 0 ? void 0 : opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            const requestId = randomId();\n            this.ackRequests.set(requestId, {\n                clientCountCallback,\n                ack,\n            });\n            this.publish({\n                type: MessageType.BROADCAST,\n                data: {\n                    packet,\n                    requestId,\n                    opts: encodeOptions(opts),\n                },\n            });\n            // we have no way to know at this level whether the server has received an acknowledgement from each client, so we\n            // will simply clean up the ackRequests map after the given delay\n            setTimeout(() => {\n                this.ackRequests.delete(requestId);\n            }, opts.flags.timeout);\n        }\n        super.broadcastWithAck(packet, opts, clientCountCallback, ack);\n    }\n    async addSockets(opts, rooms) {\n        var _a;\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            try {\n                await this.publishAndReturnOffset({\n                    type: MessageType.SOCKETS_JOIN,\n                    data: {\n                        opts: encodeOptions(opts),\n                        rooms,\n                    },\n                });\n            }\n            catch (e) {\n                debug(\"[%s] error while publishing message: %s\", this.uid, e.message);\n            }\n        }\n        super.addSockets(opts, rooms);\n    }\n    async delSockets(opts, rooms) {\n        var _a;\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            try {\n                await this.publishAndReturnOffset({\n                    type: MessageType.SOCKETS_LEAVE,\n                    data: {\n                        opts: encodeOptions(opts),\n                        rooms,\n                    },\n                });\n            }\n            catch (e) {\n                debug(\"[%s] error while publishing message: %s\", this.uid, e.message);\n            }\n        }\n        super.delSockets(opts, rooms);\n    }\n    async disconnectSockets(opts, close) {\n        var _a;\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            try {\n                await this.publishAndReturnOffset({\n                    type: MessageType.DISCONNECT_SOCKETS,\n                    data: {\n                        opts: encodeOptions(opts),\n                        close,\n                    },\n                });\n            }\n            catch (e) {\n                debug(\"[%s] error while publishing message: %s\", this.uid, e.message);\n            }\n        }\n        super.disconnectSockets(opts, close);\n    }\n    async fetchSockets(opts) {\n        var _a;\n        const [localSockets, serverCount] = await Promise.all([\n            super.fetchSockets(opts),\n            this.serverCount(),\n        ]);\n        const expectedResponseCount = serverCount - 1;\n        if (((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local) || expectedResponseCount <= 0) {\n            return localSockets;\n        }\n        const requestId = randomId();\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                const storedRequest = this.requests.get(requestId);\n                if (storedRequest) {\n                    reject(new Error(`timeout reached: only ${storedRequest.current} responses received out of ${storedRequest.expected}`));\n                    this.requests.delete(requestId);\n                }\n            }, opts.flags.timeout || DEFAULT_TIMEOUT);\n            const storedRequest = {\n                type: MessageType.FETCH_SOCKETS,\n                resolve,\n                timeout,\n                current: 0,\n                expected: expectedResponseCount,\n                responses: localSockets,\n            };\n            this.requests.set(requestId, storedRequest);\n            this.publish({\n                type: MessageType.FETCH_SOCKETS,\n                data: {\n                    opts: encodeOptions(opts),\n                    requestId,\n                },\n            });\n        });\n    }\n    async serverSideEmit(packet) {\n        const withAck = typeof packet[packet.length - 1] === \"function\";\n        if (!withAck) {\n            return this.publish({\n                type: MessageType.SERVER_SIDE_EMIT,\n                data: {\n                    packet,\n                },\n            });\n        }\n        const ack = packet.pop();\n        const expectedResponseCount = (await this.serverCount()) - 1;\n        debug('[%s] waiting for %d responses to \"serverSideEmit\" request', this.uid, expectedResponseCount);\n        if (expectedResponseCount <= 0) {\n            return ack(null, []);\n        }\n        const requestId = randomId();\n        const timeout = setTimeout(() => {\n            const storedRequest = this.requests.get(requestId);\n            if (storedRequest) {\n                ack(new Error(`timeout reached: only ${storedRequest.current} responses received out of ${storedRequest.expected}`), storedRequest.responses);\n                this.requests.delete(requestId);\n            }\n        }, DEFAULT_TIMEOUT);\n        const storedRequest = {\n            type: MessageType.SERVER_SIDE_EMIT,\n            resolve: ack,\n            timeout,\n            current: 0,\n            expected: expectedResponseCount,\n            responses: [],\n        };\n        this.requests.set(requestId, storedRequest);\n        this.publish({\n            type: MessageType.SERVER_SIDE_EMIT,\n            data: {\n                requestId,\n                packet,\n            },\n        });\n    }\n    publish(message) {\n        this.publishAndReturnOffset(message).catch((err) => {\n            debug(\"[%s] error while publishing message: %s\", this.uid, err);\n        });\n    }\n    publishAndReturnOffset(message) {\n        message.uid = this.uid;\n        message.nsp = this.nsp.name;\n        return this.doPublish(message);\n    }\n    publishResponse(requesterUid, response) {\n        response.uid = this.uid;\n        response.nsp = this.nsp.name;\n        this.doPublishResponse(requesterUid, response).catch((err) => {\n            debug(\"[%s] error while publishing response: %s\", this.uid, err);\n        });\n    }\n}\nexports.ClusterAdapter = ClusterAdapter;\nclass ClusterAdapterWithHeartbeat extends ClusterAdapter {\n    constructor(nsp, opts) {\n        super(nsp);\n        this.nodesMap = new Map(); // uid => timestamp of last message\n        this.customRequests = new Map();\n        this._opts = Object.assign({\n            heartbeatInterval: 5000,\n            heartbeatTimeout: 10000,\n        }, opts);\n        this.cleanupTimer = setInterval(() => {\n            const now = Date.now();\n            this.nodesMap.forEach((lastSeen, uid) => {\n                const nodeSeemsDown = now - lastSeen > this._opts.heartbeatTimeout;\n                if (nodeSeemsDown) {\n                    debug(\"[%s] node %s seems down\", this.uid, uid);\n                    this.removeNode(uid);\n                }\n            });\n        }, 1000);\n    }\n    init() {\n        this.publish({\n            type: MessageType.INITIAL_HEARTBEAT,\n        });\n    }\n    scheduleHeartbeat() {\n        if (this.heartbeatTimer) {\n            this.heartbeatTimer.refresh();\n        }\n        else {\n            this.heartbeatTimer = setTimeout(() => {\n                this.publish({\n                    type: MessageType.HEARTBEAT,\n                });\n            }, this._opts.heartbeatInterval);\n        }\n    }\n    close() {\n        this.publish({\n            type: MessageType.ADAPTER_CLOSE,\n        });\n        clearTimeout(this.heartbeatTimer);\n        if (this.cleanupTimer) {\n            clearInterval(this.cleanupTimer);\n        }\n    }\n    onMessage(message, offset) {\n        if (message.uid === this.uid) {\n            return debug(\"[%s] ignore message from self\", this.uid);\n        }\n        if (message.uid && message.uid !== EMITTER_UID) {\n            // we track the UID of each sender, in order to know how many servers there are in the cluster\n            this.nodesMap.set(message.uid, Date.now());\n        }\n        debug(\"[%s] new event of type %d from %s\", this.uid, message.type, message.uid);\n        switch (message.type) {\n            case MessageType.INITIAL_HEARTBEAT:\n                this.publish({\n                    type: MessageType.HEARTBEAT,\n                });\n                break;\n            case MessageType.HEARTBEAT:\n                // nothing to do\n                break;\n            case MessageType.ADAPTER_CLOSE:\n                this.removeNode(message.uid);\n                break;\n            default:\n                super.onMessage(message, offset);\n        }\n    }\n    serverCount() {\n        return Promise.resolve(1 + this.nodesMap.size);\n    }\n    publish(message) {\n        this.scheduleHeartbeat();\n        return super.publish(message);\n    }\n    async serverSideEmit(packet) {\n        const withAck = typeof packet[packet.length - 1] === \"function\";\n        if (!withAck) {\n            return this.publish({\n                type: MessageType.SERVER_SIDE_EMIT,\n                data: {\n                    packet,\n                },\n            });\n        }\n        const ack = packet.pop();\n        const expectedResponseCount = this.nodesMap.size;\n        debug('[%s] waiting for %d responses to \"serverSideEmit\" request', this.uid, expectedResponseCount);\n        if (expectedResponseCount <= 0) {\n            return ack(null, []);\n        }\n        const requestId = randomId();\n        const timeout = setTimeout(() => {\n            const storedRequest = this.customRequests.get(requestId);\n            if (storedRequest) {\n                ack(new Error(`timeout reached: missing ${storedRequest.missingUids.size} responses`), storedRequest.responses);\n                this.customRequests.delete(requestId);\n            }\n        }, DEFAULT_TIMEOUT);\n        const storedRequest = {\n            type: MessageType.SERVER_SIDE_EMIT,\n            resolve: ack,\n            timeout,\n            missingUids: new Set([...this.nodesMap.keys()]),\n            responses: [],\n        };\n        this.customRequests.set(requestId, storedRequest);\n        this.publish({\n            type: MessageType.SERVER_SIDE_EMIT,\n            data: {\n                requestId,\n                packet,\n            },\n        });\n    }\n    async fetchSockets(opts) {\n        var _a;\n        const [localSockets, serverCount] = await Promise.all([\n            super.fetchSockets({\n                rooms: opts.rooms,\n                except: opts.except,\n                flags: {\n                    local: true,\n                },\n            }),\n            this.serverCount(),\n        ]);\n        const expectedResponseCount = serverCount - 1;\n        if (((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local) || expectedResponseCount <= 0) {\n            return localSockets;\n        }\n        const requestId = randomId();\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                const storedRequest = this.customRequests.get(requestId);\n                if (storedRequest) {\n                    reject(new Error(`timeout reached: missing ${storedRequest.missingUids.size} responses`));\n                    this.customRequests.delete(requestId);\n                }\n            }, opts.flags.timeout || DEFAULT_TIMEOUT);\n            const storedRequest = {\n                type: MessageType.FETCH_SOCKETS,\n                resolve,\n                timeout,\n                missingUids: new Set([...this.nodesMap.keys()]),\n                responses: localSockets,\n            };\n            this.customRequests.set(requestId, storedRequest);\n            this.publish({\n                type: MessageType.FETCH_SOCKETS,\n                data: {\n                    opts: encodeOptions(opts),\n                    requestId,\n                },\n            });\n        });\n    }\n    onResponse(response) {\n        const requestId = response.data.requestId;\n        debug(\"[%s] received response %s to request %s\", this.uid, response.type, requestId);\n        switch (response.type) {\n            case MessageType.FETCH_SOCKETS_RESPONSE: {\n                const request = this.customRequests.get(requestId);\n                if (!request) {\n                    return;\n                }\n                response.data.sockets.forEach((socket) => request.responses.push(socket));\n                request.missingUids.delete(response.uid);\n                if (request.missingUids.size === 0) {\n                    clearTimeout(request.timeout);\n                    request.resolve(request.responses);\n                    this.customRequests.delete(requestId);\n                }\n                break;\n            }\n            case MessageType.SERVER_SIDE_EMIT_RESPONSE: {\n                const request = this.customRequests.get(requestId);\n                if (!request) {\n                    return;\n                }\n                request.responses.push(response.data.packet);\n                request.missingUids.delete(response.uid);\n                if (request.missingUids.size === 0) {\n                    clearTimeout(request.timeout);\n                    request.resolve(null, request.responses);\n                    this.customRequests.delete(requestId);\n                }\n                break;\n            }\n            default:\n                super.onResponse(response);\n        }\n    }\n    removeNode(uid) {\n        this.customRequests.forEach((request, requestId) => {\n            request.missingUids.delete(uid);\n            if (request.missingUids.size === 0) {\n                clearTimeout(request.timeout);\n                if (request.type === MessageType.FETCH_SOCKETS) {\n                    request.resolve(request.responses);\n                }\n                else if (request.type === MessageType.SERVER_SIDE_EMIT) {\n                    request.resolve(null, request.responses);\n                }\n                this.customRequests.delete(requestId);\n            }\n        });\n        this.nodesMap.delete(uid);\n    }\n}\nexports.ClusterAdapterWithHeartbeat = ClusterAdapterWithHeartbeat;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageType = exports.ClusterAdapterWithHeartbeat = exports.ClusterAdapter = exports.SessionAwareAdapter = exports.Adapter = void 0;\nvar in_memory_adapter_1 = require(\"./in-memory-adapter\");\nObject.defineProperty(exports, \"Adapter\", { enumerable: true, get: function () { return in_memory_adapter_1.Adapter; } });\nObject.defineProperty(exports, \"SessionAwareAdapter\", { enumerable: true, get: function () { return in_memory_adapter_1.SessionAwareAdapter; } });\nvar cluster_adapter_1 = require(\"./cluster-adapter\");\nObject.defineProperty(exports, \"ClusterAdapter\", { enumerable: true, get: function () { return cluster_adapter_1.ClusterAdapter; } });\nObject.defineProperty(exports, \"ClusterAdapterWithHeartbeat\", { enumerable: true, get: function () { return cluster_adapter_1.ClusterAdapterWithHeartbeat; } });\nObject.defineProperty(exports, \"MessageType\", { enumerable: true, get: function () { return cluster_adapter_1.MessageType; } });\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParentNamespace = void 0;\nconst namespace_1 = require(\"./namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"socket.io:parent-namespace\");\n/**\n * A parent namespace is a special {@link Namespace} that holds a list of child namespaces which were created either\n * with a regular expression or with a function.\n *\n * @example\n * const parentNamespace = io.of(/\\/dynamic-\\d+/);\n *\n * parentNamespace.on(\"connection\", (socket) => {\n *   const childNamespace = socket.nsp;\n * }\n *\n * // will reach all the clients that are in one of the child namespaces, like \"/dynamic-101\"\n * parentNamespace.emit(\"hello\", \"world\");\n *\n */\nclass ParentNamespace extends namespace_1.Namespace {\n    constructor(server) {\n        super(server, \"/_\" + ParentNamespace.count++);\n        this.children = new Set();\n    }\n    /**\n     * @private\n     */\n    _initAdapter() {\n        this.adapter = new ParentBroadcastAdapter(this);\n    }\n    emit(ev, ...args) {\n        this.children.forEach((nsp) => {\n            nsp.emit(ev, ...args);\n        });\n        return true;\n    }\n    createChild(name) {\n        debug(\"creating child namespace %s\", name);\n        const namespace = new namespace_1.Namespace(this.server, name);\n        this[\"_fns\"].forEach((fn) => namespace.use(fn));\n        this.listeners(\"connect\").forEach((listener) => namespace.on(\"connect\", listener));\n        this.listeners(\"connection\").forEach((listener) => namespace.on(\"connection\", listener));\n        this.children.add(namespace);\n        if (this.server._opts.cleanupEmptyChildNamespaces) {\n            const remove = namespace._remove;\n            namespace._remove = (socket) => {\n                remove.call(namespace, socket);\n                if (namespace.sockets.size === 0) {\n                    debug(\"closing child namespace %s\", name);\n                    namespace.adapter.close();\n                    this.server._nsps.delete(namespace.name);\n                    this.children.delete(namespace);\n                }\n            };\n        }\n        this.server._nsps.set(name, namespace);\n        // @ts-ignore\n        this.server.sockets.emitReserved(\"new_namespace\", namespace);\n        return namespace;\n    }\n    fetchSockets() {\n        // note: we could make the fetchSockets() method work for dynamic namespaces created with a regex (by sending the\n        // regex to the other Socket.IO servers, and returning the sockets of each matching namespace for example), but\n        // the behavior for namespaces created with a function is less clear\n        // note²: we cannot loop over each children namespace, because with multiple Socket.IO servers, a given namespace\n        // may exist on one node but not exist on another (since it is created upon client connection)\n        throw new Error(\"fetchSockets() is not supported on parent namespaces\");\n    }\n}\nexports.ParentNamespace = ParentNamespace;\nParentNamespace.count = 0;\n/**\n * A dummy adapter that only supports broadcasting to child (concrete) namespaces.\n * @private file\n */\nclass ParentBroadcastAdapter extends socket_io_adapter_1.Adapter {\n    broadcast(packet, opts) {\n        this.nsp.children.forEach((nsp) => {\n            nsp.adapter.broadcast(packet, opts);\n        });\n    }\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patchAdapter = patchAdapter;\nexports.restoreAdapter = restoreAdapter;\nexports.serveFile = serveFile;\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"socket.io:adapter-uws\");\nconst SEPARATOR = \"\\x1f\"; // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst { addAll, del, broadcast } = socket_io_adapter_1.Adapter.prototype;\nfunction patchAdapter(app /* : TemplatedApp */) {\n    socket_io_adapter_1.Adapter.prototype.addAll = function (id, rooms) {\n        const isNew = !this.sids.has(id);\n        addAll.call(this, id, rooms);\n        const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n        if (!socket) {\n            return;\n        }\n        if (socket.conn.transport.name === \"websocket\") {\n            subscribe(this.nsp.name, socket, isNew, rooms);\n            return;\n        }\n        if (isNew) {\n            socket.conn.on(\"upgrade\", () => {\n                const rooms = this.sids.get(id);\n                if (rooms) {\n                    subscribe(this.nsp.name, socket, isNew, rooms);\n                }\n            });\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.del = function (id, room) {\n        del.call(this, id, room);\n        const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n        if (socket && socket.conn.transport.name === \"websocket\") {\n            // @ts-ignore\n            const sessionId = socket.conn.id;\n            // @ts-ignore\n            const websocket = socket.conn.transport.socket;\n            const topic = `${this.nsp.name}${SEPARATOR}${room}`;\n            debug(\"unsubscribe connection %s from topic %s\", sessionId, topic);\n            websocket.unsubscribe(topic);\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.broadcast = function (packet, opts) {\n        const useFastPublish = opts.rooms.size <= 1 && opts.except.size === 0;\n        if (!useFastPublish) {\n            broadcast.call(this, packet, opts);\n            return;\n        }\n        const flags = opts.flags || {};\n        const basePacketOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this.encoder.encode(packet);\n        const topic = opts.rooms.size === 0\n            ? this.nsp.name\n            : `${this.nsp.name}${SEPARATOR}${opts.rooms.keys().next().value}`;\n        debug(\"fast publish to %s\", topic);\n        // fast publish for clients connected with WebSocket\n        encodedPackets.forEach((encodedPacket) => {\n            const isBinary = typeof encodedPacket !== \"string\";\n            // \"4\" being the message type in the Engine.IO protocol, see https://github.com/socketio/engine.io-protocol\n            app.publish(topic, isBinary ? encodedPacket : \"4\" + encodedPacket, isBinary);\n        });\n        this.apply(opts, (socket) => {\n            if (socket.conn.transport.name !== \"websocket\") {\n                // classic publish for clients connected with HTTP long-polling\n                socket.client.writeToEngine(encodedPackets, basePacketOpts);\n            }\n        });\n    };\n}\nfunction subscribe(namespaceName, socket, isNew, rooms) {\n    // @ts-ignore\n    const sessionId = socket.conn.id;\n    // @ts-ignore\n    const websocket = socket.conn.transport.socket;\n    if (isNew) {\n        debug(\"subscribe connection %s to topic %s\", sessionId, namespaceName);\n        websocket.subscribe(namespaceName);\n    }\n    rooms.forEach((room) => {\n        const topic = `${namespaceName}${SEPARATOR}${room}`; // '#' can be used as wildcard\n        debug(\"subscribe connection %s to topic %s\", sessionId, topic);\n        websocket.subscribe(topic);\n    });\n}\nfunction restoreAdapter() {\n    socket_io_adapter_1.Adapter.prototype.addAll = addAll;\n    socket_io_adapter_1.Adapter.prototype.del = del;\n    socket_io_adapter_1.Adapter.prototype.broadcast = broadcast;\n}\nconst toArrayBuffer = (buffer) => {\n    const { buffer: arrayBuffer, byteOffset, byteLength } = buffer;\n    return arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n};\n// imported from https://github.com/kolodziejczak-sz/uwebsocket-serve\nfunction serveFile(res /* : HttpResponse */, filepath) {\n    const { size } = (0, fs_1.statSync)(filepath);\n    const readStream = (0, fs_1.createReadStream)(filepath);\n    const destroyReadStream = () => !readStream.destroyed && readStream.destroy();\n    const onError = (error) => {\n        destroyReadStream();\n        throw error;\n    };\n    const onDataChunk = (chunk) => {\n        const arrayBufferChunk = toArrayBuffer(chunk);\n        res.cork(() => {\n            const lastOffset = res.getWriteOffset();\n            const [ok, done] = res.tryEnd(arrayBufferChunk, size);\n            if (!done && !ok) {\n                readStream.pause();\n                res.onWritable((offset) => {\n                    const [ok, done] = res.tryEnd(arrayBufferChunk.slice(offset - lastOffset), size);\n                    if (!done && ok) {\n                        readStream.resume();\n                    }\n                    return ok;\n                });\n            }\n        });\n    };\n    res.onAborted(destroyReadStream);\n    readStream\n        .on(\"data\", onDataChunk)\n        .on(\"error\", onError)\n        .on(\"end\", destroyReadStream);\n}\n", "{\n  \"name\": \"socket.io\",\n  \"version\": \"4.8.1\",\n  \"description\": \"node.js realtime framework server\",\n  \"keywords\": [\n    \"realtime\",\n    \"framework\",\n    \"websocket\",\n    \"tcp\",\n    \"events\",\n    \"socket\",\n    \"io\"\n  ],\n  \"files\": [\n    \"dist/\",\n    \"client-dist/\",\n    \"wrapper.mjs\",\n    \"!**/*.tsbuildinfo\"\n  ],\n  \"directories\": {\n    \"doc\": \"docs/\",\n    \"example\": \"example/\",\n    \"lib\": \"lib/\",\n    \"test\": \"test/\"\n  },\n  \"type\": \"commonjs\",\n  \"main\": \"./dist/index.js\",\n  \"exports\": {\n    \"types\": \"./dist/index.d.ts\",\n    \"import\": \"./wrapper.mjs\",\n    \"require\": \"./dist/index.js\"\n  },\n  \"types\": \"./dist/index.d.ts\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/socketio/socket.io/tree/main/packages/socket.io#readme\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/socketio/socket.io.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/socketio/socket.io/issues\"\n  },\n  \"scripts\": {\n    \"compile\": \"rimraf ./dist && tsc\",\n    \"test\": \"npm run format:check && npm run compile && npm run test:types && npm run test:unit\",\n    \"test:types\": \"tsd\",\n    \"test:unit\": \"nyc mocha --require ts-node/register --reporter spec --slow 200 --bail --timeout 10000 test/index.ts\",\n    \"format:check\": \"prettier --check \\\"lib/**/*.ts\\\" \\\"test/**/*.ts\\\"\",\n    \"format:fix\": \"prettier --write \\\"lib/**/*.ts\\\" \\\"test/**/*.ts\\\"\",\n    \"prepack\": \"npm run compile\"\n  },\n  \"dependencies\": {\n    \"accepts\": \"~1.3.4\",\n    \"base64id\": \"~2.0.0\",\n    \"cors\": \"~2.8.5\",\n    \"debug\": \"~4.3.2\",\n    \"engine.io\": \"~6.6.0\",\n    \"socket.io-adapter\": \"~2.5.2\",\n    \"socket.io-parser\": \"~4.2.4\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Guillermo Rauch\",\n      \"email\": \"rauchg@gmail.com\"\n    },\n    {\n      \"name\": \"Arnout Kazemier\",\n      \"email\": \"info@3rd-eden.com\"\n    },\n    {\n      \"name\": \"Vladimir Dronnikov\",\n      \"email\": \"dronnikov@gmail.com\"\n    },\n    {\n      \"name\": \"Einar Otto Stangvik\",\n      \"email\": \"einaros@gmail.com\"\n    }\n  ],\n  \"engines\": {\n    \"node\": \">=10.2.0\"\n  },\n  \"tsd\": {\n    \"directory\": \"test\"\n  }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine_io_1 = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", { enumerable: true, get: function () { return namespace_1.Namespace; } });\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst typed_events_1 = require(\"./typed-events\");\nconst uws_1 = require(\"./uws\");\nconst cors_1 = __importDefault(require(\"cors\"));\nconst debug = (0, debug_1.default)(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\nclass Server extends typed_events_1.StrictEventEmitter {\n    constructor(srv, opts = {}) {\n        super();\n        /**\n         * @private\n         */\n        this._nsps = new Map();\n        this.parentNsps = new Map();\n        /**\n         * A subset of the {@link parentNsps} map, only containing {@link ParentNamespace} which are based on a regular\n         * expression.\n         *\n         * @private\n         */\n        this.parentNamespacesFromRegExp = new Map();\n        if (\"object\" === typeof srv &&\n            srv instanceof Object &&\n            !srv.listen) {\n            opts = srv;\n            srv = undefined;\n        }\n        this.path(opts.path || \"/socket.io\");\n        this.connectTimeout(opts.connectTimeout || 45000);\n        this.serveClient(false !== opts.serveClient);\n        this._parser = opts.parser || parser;\n        this.encoder = new this._parser.Encoder();\n        this.opts = opts;\n        if (opts.connectionStateRecovery) {\n            opts.connectionStateRecovery = Object.assign({\n                maxDisconnectionDuration: 2 * 60 * 1000,\n                skipMiddlewares: true,\n            }, opts.connectionStateRecovery);\n            this.adapter(opts.adapter || socket_io_adapter_1.SessionAwareAdapter);\n        }\n        else {\n            this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n        }\n        opts.cleanupEmptyChildNamespaces = !!opts.cleanupEmptyChildNamespaces;\n        this.sockets = this.of(\"/\");\n        if (srv || typeof srv == \"number\")\n            this.attach(srv);\n        if (this.opts.cors) {\n            this._corsMiddleware = (0, cors_1.default)(this.opts.cors);\n        }\n    }\n    get _opts() {\n        return this.opts;\n    }\n    serveClient(v) {\n        if (!arguments.length)\n            return this._serveClient;\n        this._serveClient = v;\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n    _checkNamespace(name, auth, fn) {\n        if (this.parentNsps.size === 0)\n            return fn(false);\n        const keysIterator = this.parentNsps.keys();\n        const run = () => {\n            const nextFn = keysIterator.next();\n            if (nextFn.done) {\n                return fn(false);\n            }\n            nextFn.value(name, auth, (err, allow) => {\n                if (err || !allow) {\n                    return run();\n                }\n                if (this._nsps.has(name)) {\n                    // the namespace was created in the meantime\n                    debug(\"dynamic namespace %s already exists\", name);\n                    return fn(this._nsps.get(name));\n                }\n                const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n                debug(\"dynamic namespace %s was created\", name);\n                fn(namespace);\n            });\n        };\n        run();\n    }\n    path(v) {\n        if (!arguments.length)\n            return this._path;\n        this._path = v.replace(/\\/$/, \"\");\n        const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        this.clientPathRegex = new RegExp(\"^\" +\n            escapedPath +\n            \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n        return this;\n    }\n    connectTimeout(v) {\n        if (v === undefined)\n            return this._connectTimeout;\n        this._connectTimeout = v;\n        return this;\n    }\n    adapter(v) {\n        if (!arguments.length)\n            return this._adapter;\n        this._adapter = v;\n        for (const nsp of this._nsps.values()) {\n            nsp._initAdapter();\n        }\n        return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    listen(srv, opts = {}) {\n        return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    attach(srv, opts = {}) {\n        if (\"function\" == typeof srv) {\n            const msg = \"You are trying to attach socket.io to an express \" +\n                \"request handler function. Please pass a http.Server instance.\";\n            throw new Error(msg);\n        }\n        // handle a port as a string\n        if (Number(srv) == srv) {\n            srv = Number(srv);\n        }\n        if (\"number\" == typeof srv) {\n            debug(\"creating http server and binding to %d\", srv);\n            const port = srv;\n            srv = http.createServer((req, res) => {\n                res.writeHead(404);\n                res.end();\n            });\n            srv.listen(port);\n        }\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        this.initEngine(srv, opts);\n        return this;\n    }\n    attachApp(app /*: TemplatedApp */, opts = {}) {\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        // initialize engine\n        debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n        const engine = new engine_io_1.uServer(opts);\n        engine.attach(app, opts);\n        // bind to engine events\n        this.bind(engine);\n        if (this._serveClient) {\n            // attach static file serving\n            app.get(`${this._path}/*`, (res, req) => {\n                if (!this.clientPathRegex.test(req.getUrl())) {\n                    req.setYield(true);\n                    return;\n                }\n                const filename = req\n                    .getUrl()\n                    .replace(this._path, \"\")\n                    .replace(/\\?.*$/, \"\")\n                    .replace(/^\\//, \"\");\n                const isMap = dotMapRegex.test(filename);\n                const type = isMap ? \"map\" : \"source\";\n                // Per the standard, ETags must be quoted:\n                // https://tools.ietf.org/html/rfc7232#section-2.3\n                const expectedEtag = '\"' + clientVersion + '\"';\n                const weakEtag = \"W/\" + expectedEtag;\n                const etag = req.getHeader(\"if-none-match\");\n                if (etag) {\n                    if (expectedEtag === etag || weakEtag === etag) {\n                        debug(\"serve client %s 304\", type);\n                        res.writeStatus(\"304 Not Modified\");\n                        res.end();\n                        return;\n                    }\n                }\n                debug(\"serve client %s\", type);\n                res.writeHeader(\"cache-control\", \"public, max-age=0\");\n                res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n                res.writeHeader(\"etag\", expectedEtag);\n                const filepath = path.join(__dirname, \"../client-dist/\", filename);\n                (0, uws_1.serveFile)(res, filepath);\n            });\n        }\n        (0, uws_1.patchAdapter)(app);\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n    initEngine(srv, opts) {\n        // initialize engine\n        debug(\"creating engine.io instance with opts %j\", opts);\n        this.eio = (0, engine_io_1.attach)(srv, opts);\n        // attach static file serving\n        if (this._serveClient)\n            this.attachServe(srv);\n        // Export http server\n        this.httpServer = srv;\n        // bind to engine events\n        this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n    attachServe(srv) {\n        debug(\"attaching client serving req handler\");\n        const evs = srv.listeners(\"request\").slice(0);\n        srv.removeAllListeners(\"request\");\n        srv.on(\"request\", (req, res) => {\n            if (this.clientPathRegex.test(req.url)) {\n                if (this._corsMiddleware) {\n                    this._corsMiddleware(req, res, () => {\n                        this.serve(req, res);\n                    });\n                }\n                else {\n                    this.serve(req, res);\n                }\n            }\n            else {\n                for (let i = 0; i < evs.length; i++) {\n                    evs[i].call(srv, req, res);\n                }\n            }\n        });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n    serve(req, res) {\n        const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.headers[\"if-none-match\"];\n        if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n                debug(\"serve client %s 304\", type);\n                res.writeHead(304);\n                res.end();\n                return;\n            }\n        }\n        debug(\"serve client %s\", type);\n        res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n        res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n        res.setHeader(\"ETag\", expectedEtag);\n        Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n    static sendFile(filename, req, res) {\n        const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n        const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n        const onError = (err) => {\n            if (err) {\n                res.end();\n            }\n        };\n        switch (encoding) {\n            case \"br\":\n                res.writeHead(200, { \"content-encoding\": \"br\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n                break;\n            case \"gzip\":\n                res.writeHead(200, { \"content-encoding\": \"gzip\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n                break;\n            case \"deflate\":\n                res.writeHead(200, { \"content-encoding\": \"deflate\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n                break;\n            default:\n                res.writeHead(200);\n                (0, stream_1.pipeline)(readStream, res, onError);\n        }\n    }\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param engine engine.io (or compatible) server\n     * @return self\n     */\n    bind(engine) {\n        // TODO apply strict types to the engine: \"connection\" event, `close()` and a method to serve static content\n        //  this would allow to provide any custom engine, like one based on Deno or Bun built-in HTTP server\n        this.engine = engine;\n        this.engine.on(\"connection\", this.onconnection.bind(this));\n        return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n    onconnection(conn) {\n        debug(\"incoming connection with id %s\", conn.id);\n        const client = new client_1.Client(this, conn);\n        if (conn.protocol === 3) {\n            // @ts-ignore\n            client.connect(\"/\");\n        }\n        return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @example\n     * // with a simple string\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // with a regex\n     * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n     *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n     *\n     *   // broadcast to all clients in the given sub-namespace\n     *   namespace.emit(\"hello\");\n     * });\n     *\n     * @param name - nsp name\n     * @param fn optional, nsp `connection` ev handler\n     */\n    of(name, fn) {\n        if (typeof name === \"function\" || name instanceof RegExp) {\n            const parentNsp = new parent_namespace_1.ParentNamespace(this);\n            debug(\"initializing parent namespace %s\", parentNsp.name);\n            if (typeof name === \"function\") {\n                this.parentNsps.set(name, parentNsp);\n            }\n            else {\n                this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n                this.parentNamespacesFromRegExp.set(name, parentNsp);\n            }\n            if (fn) {\n                // @ts-ignore\n                parentNsp.on(\"connect\", fn);\n            }\n            return parentNsp;\n        }\n        if (String(name)[0] !== \"/\")\n            name = \"/\" + name;\n        let nsp = this._nsps.get(name);\n        if (!nsp) {\n            for (const [regex, parentNamespace] of this.parentNamespacesFromRegExp) {\n                if (regex.test(name)) {\n                    debug(\"attaching namespace %s to parent namespace %s\", name, regex);\n                    return parentNamespace.createChild(name);\n                }\n            }\n            debug(\"initializing namespace %s\", name);\n            nsp = new namespace_1.Namespace(this, name);\n            this._nsps.set(name, nsp);\n            if (name !== \"/\") {\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", nsp);\n            }\n        }\n        if (fn)\n            nsp.on(\"connect\", fn);\n        return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     */\n    async close(fn) {\n        await Promise.allSettled([...this._nsps.values()].map(async (nsp) => {\n            nsp.sockets.forEach((socket) => {\n                socket._onclose(\"server shutting down\");\n            });\n            await nsp.adapter.close();\n        }));\n        this.engine.close();\n        // restore the Adapter prototype, when the Socket.IO server was attached to a uWebSockets.js server\n        (0, uws_1.restoreAdapter)();\n        if (this.httpServer) {\n            this.httpServer.close(fn);\n        }\n        else {\n            fn && fn();\n        }\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * io.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n    use(fn) {\n        this.sockets.use(fn);\n        return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return this.sockets.except(room);\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.send(\"hello\");\n     *\n     * // this is equivalent to\n     * io.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        // This type-cast is needed because EmitEvents likely doesn't have `message` as a key.\n        // if you specify the EmitEvents, the type of args will be never.\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        // This type-cast is needed because EmitEvents likely doesn't have `message` as a key.\n        // if you specify the EmitEvents, the type of args will be never.\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * io.serverSideEmit(\"hello\", \"world\");\n     *\n     * io.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * io.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some servers did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per server (except the current one)\n     *   }\n     * });\n     *\n     * io.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(ev, ...args) {\n        return this.sockets.serverSideEmit(ev, ...args);\n    }\n    /**\n     * Sends a message and expect an acknowledgement from the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * try {\n     *   const responses = await io.serverSideEmitWithAck(\"ping\");\n     *   console.log(responses); // one response per server (except the current one)\n     * } catch (e) {\n     *   // some servers did not acknowledge the event in the given delay\n     * }\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments\n     *\n     * @return a Promise that will be fulfilled when all servers have acknowledged the event\n     */\n    serverSideEmitWithAck(ev, ...args) {\n        return this.sockets.serverSideEmitWithAck(ev, ...args);\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link Server#fetchSockets} instead.\n     */\n    allSockets() {\n        return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    compress(compress) {\n        return this.sockets.compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get volatile() {\n        return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return this.sockets.local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return this.sockets.timeout(timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        return this.sockets.disconnectSockets(close);\n    }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n    return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n    Server.prototype[fn] = function () {\n        return this.sockets[fn].apply(this.sockets, arguments);\n    };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\n", "import io from \"./dist/index.js\";\n\nexport const {Server, Namespace, Socket} = io;\n"],
  "mappings": "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",
  "names": ["bytes", "err", "data", "Socket", "decode", "require_browser", "Server", "req", "errorCode", "errorContext", "require_polling", "buffer", "data", "require_websocket", "errorCode", "errorContext", "require_common", "require_browser", "require_cjs", "PacketType", "require_common", "require_browser", "require_socket", "Socket", "Namespace", "_a", "require_common", "require_browser", "MessageType", "storedRequest", "rooms", "ok", "done", "require_dist", "Server", "nsp", "io"]
}
